[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "cpceed-webapp/api/app.js",
    "content": "const express = require('express');\nconst mongoose = require('mongoose');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\nconst cors = require('cors');\n\nconst strings = require('api/resources/strings.js');\nconst passport = require('api/passport-config.js');\nconst apiRouter = require('api/router.js');\nconst logger = require('common/logger.js');\n\n// Declarations/Definitions\nconst port = process.env.PORT || 3000;\nconst app = express();\nconst format = ':method :url :status :response-time ms - :res[content-length]';\nconst corsOptions = {};\n\n// NODE_ENV dependent variations\nswitch (process.env.NODE_ENV) {\n  case 'test':\n    logger.disableAll();\n    break;\n  case 'dev':\n    corsOptions.origin = 'http://127.0.0.1:8080';\n    corsOptions.credentials = true;\n    break;\n  default:\n    corsOptions.origin = 'http://127.0.0.1:3000';\n}\n\n// Express configuration.\napp.use(cors(corsOptions));\napp.set('port', port);\napp.use(morgan(format, {\n  skip() { return process.env.NODE_ENV === 'test'; },\n}));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n// TODO(NilsG-S): setup https for production\napp.use(session({\n  cookie: {\n    httpOnly: true,\n    maxAge: 1000 * 60 * 60 * 24 * 14,\n    secure: process.env.NODE_ENV === 'prod',\n  },\n  name: strings.cookieName,\n  resave: false,\n  saveUninitialized: false,\n  secret: process.env.SECRET,\n  store: new MongoStore({\n    mongooseConnection: mongoose.connection,\n    ttl: 60 * 60 * 24 * 14,\n    collection: 'sessions',\n    stringify: false,\n  }),\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Routes.\napp.use('/', express.static(`${__dirname}/../build`));\napp.use('/api', apiRouter);\n\n// 404.\napp.use((req, res, next) => {\n  const err = new Error('Route not found.');\n\n  err.status = 404;\n  next(err);\n});\n\napp.use((err, req, res) => {\n  res.status(err.status || 500);\n  res.json(err.message);\n});\n\nmodule.exports = app;\n",
    "static": true,
    "longname": "cpceed-webapp/api/app.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "express",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~express",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "mongoose",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~mongoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "morgan",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~morgan",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "name": "bodyParser",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~bodyParser",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "session",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~session",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "name": "MongoStore",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~MongoStore",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "cors",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~cors",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "name": "strings",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~strings",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "variable",
    "name": "passport",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~passport",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "apiRouter",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~apiRouter",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "name": "logger",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~logger",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "port",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~port",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "name": "format",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~format",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "name": "corsOptions",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~corsOptions",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "variable",
    "name": "app",
    "memberof": "cpceed-webapp/api/app.js",
    "static": true,
    "longname": "cpceed-webapp/api/app.js~app",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/app.js",
    "importStyle": "app",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "file",
    "name": "cpceed-webapp/api/auth/auth-manager.js",
    "content": "const passport = require('api/passport-config.js');\n\nconst authErrors = require('api/errors/auth-errors');\nconst User = require('api/users/user-models').User;\nconst utils = require('api/core/utils.js');\n\n/**\n * Given a valid email/password, generates a session and returns the id.\n * @param {Object} req - The request object.\n * @param {Object} res - The response object.\n * @returns {Promise<string, Error>} - Resolves with the session id, or\n * rejects with an error that contains a status code and a message.\n */\nconst login = async (req, res) => {\n  try {\n    const rawUser = await new Promise((resolve, reject) => {\n      // Arguments come from passport-config.js callback.\n      passport.authenticate('local', (err, user, info) => {\n        if (err) {\n          reject(authErrors.errorConstructor(err.message, 400));\n          return;\n        }\n\n        if (!user) {\n          reject(authErrors.errorConstructor(info.message, 401));\n          return;\n        }\n\n        req.logIn(user, (authErr) => {\n          if (authErr) {\n            reject(authErrors.errorConstructor(authErr.message, 400));\n            return;\n          }\n\n          resolve(user);\n        });\n      })(req, res);\n    });\n\n    const output = {\n      user: {\n        uid: rawUser.id,\n        email: rawUser.email,\n        name: rawUser.name,\n        role: rawUser.role,\n      },\n      expires: req.session.cookie.expires,\n    };\n\n    if (rawUser.role === 'student') {\n      output.user.points = rawUser.points;\n      output.user.isApproved = rawUser.isApproved;\n    }\n\n    return output;\n  } catch (err) {\n    throw err;\n  }\n};\n\n/**\n * Delete a specific session from the database.\n * @param {Object} session - The client's session.\n * @returns {Promise<undefined, Error>} - Resolves, or rejects with an error.\n */\nconst logout = async (session) => {\n  try {\n    await new Promise((resolve, reject) => {\n      // Delete the session from the DB.\n      session.destroy((err) => {\n        if (err) {\n          return reject(err);\n        }\n\n        return resolve();\n      });\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\n/**\n * Delete all of user's sessions from database and change their password.\n * @param {string} email - The user's email address.\n * @param {string} storedPassword - The user's stored password.\n * @param {string} password - The user's old password.\n * @param {string} newPassword - The user's new password.\n * @returns {Promise<undefined, Error>} - resolves, or rejects with an error.\n */\nconst changePassword = async (email, storedPassword, password, newPassword) => {\n  try {\n    const isMatch = await utils.comparePassword(password, storedPassword);\n\n    // The wrong password was provided.\n    if (!isMatch) {\n      throw authErrors.invalidPasswordError;\n    }\n\n    const conditions = { email };\n    const update = { password: newPassword };\n    const options = { new: true };\n\n    await User.findOneAndUpdate(conditions, { $set: update }, options).exec();\n\n    await utils.deleteSessionsByEmail(email);\n\n    return;\n  } catch (err) {\n    throw err;\n  }\n};\n\n/**\n * Delete all of user's sessions from database and change their email.\n * @param {string} email - The user's email address.\n * @param {string} storedPassword - The user's stored password.\n * @param {string} password - The user's old password.\n * @param {string} newEmail - The user's new email.\n * @returns {Promise<undefined, Error>} - resolves, or rejects with an error.\n */\nconst changeEmail = async (email, storedPassword, password, newEmail) => {\n  try {\n    const isMatch = await utils.comparePassword(password, storedPassword);\n\n    // The wrong password was provided.\n    if (!isMatch) {\n      throw authErrors.invalidPasswordError;\n    }\n\n    const conditions = { email };\n    const update = { email: newEmail };\n    const options = { new: true };\n\n    await User.findOneAndUpdate(conditions, { $set: update }, options).exec();\n\n    await utils.deleteSessionsByEmail(email);\n\n    return;\n  } catch (err) {\n    throw err;\n  }\n};\n\n/**\n * Middleware to determine whether the session is verified.\n * For valid sessions, the next middleware is called.\n * @param {Object} req - The request object.\n * @param {Object} res - The response object.\n * @param {function} next - Invoke the next middleware or route.\n */\nconst verify = (req, res, next) => {\n  // No user was retrieved, so no valid session exists. Inform the client.\n  if (!req.user) {\n    const message = authErrors.invalidSessionError.message;\n    // Prevent execution of later middleware for efficiency and clarity.\n    res.status(400).json({ message }).end();\n    return;\n  }\n\n  next();\n};\n\n/*\n * Middleware to verify the user has access permissions of some document.\n * For valid tokens, an `uid` object is added to the response.locals object.\n * The `uid` object is the uid of the owner of the document being accessed.\n * @param {Object} req - The request object.\n * @param {Object} res - The response object.\n * @param {function} next - Invoke the next middleware or route.\n */\nconst validateUidPermissions = (req, res, next) => {\n  let uid = req.user.id;\n  if (!uid) {\n    res.locals.err = authErrors.missingTokenError;\n    next();\n    return;\n  }\n  // TODO(NilsG-S): Why reference req.query when the id is known to be in req.user?\n  // I'm pretty sure this won't ever do anything...\n  if (req.query.uid) {\n    if (req.user.role === 'admin') {\n      uid = req.query.uid;\n    } else if (req.query.uid !== uid) {\n      res.locals.err = authErrors.unauthorizedError;\n      console.log('Unauthorized');\n      next(authErrors.unauthorizedError);\n      return;\n    }\n  }\n  res.locals.uid = uid;\n  next();\n};\n\nmodule.exports = {\n  changePassword,\n  changeEmail,\n  login,\n  logout,\n  verify,\n  validateUidPermissions,\n};\n",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "name": "passport",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~passport",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "name": "authErrors",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~authErrors",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "name": "User",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~User",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "name": "utils",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~utils",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "function",
    "name": "changePassword",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~changePassword",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": "{changePassword}",
    "description": "Delete all of user's sessions from database and change their password.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<undefined, Error>} - resolves, or rejects with an error."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "The user's email address."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "storedPassword",
        "description": "The user's stored password."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The user's old password."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newPassword",
        "description": "The user's new password."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "resolves, or rejects with an error."
    }
  },
  {
    "__docId__": 22,
    "kind": "function",
    "name": "changeEmail",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~changeEmail",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": "{changeEmail}",
    "description": "Delete all of user's sessions from database and change their email.",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<undefined, Error>} - resolves, or rejects with an error."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "The user's email address."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "storedPassword",
        "description": "The user's stored password."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The user's old password."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newEmail",
        "description": "The user's new email."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "resolves, or rejects with an error."
    }
  },
  {
    "__docId__": 23,
    "kind": "function",
    "name": "login",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~login",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": "{login}",
    "description": "Given a valid email/password, generates a session and returns the id.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<string, Error>} - Resolves with the session id, or\nrejects with an error that contains a status code and a message."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The request object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The response object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Resolves with the session id, or\nrejects with an error that contains a status code and a message."
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "logout",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~logout",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": "{logout}",
    "description": "Delete a specific session from the database.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<undefined, Error>} - Resolves, or rejects with an error."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "session",
        "description": "The client's session."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Resolves, or rejects with an error."
    }
  },
  {
    "__docId__": 25,
    "kind": "function",
    "name": "verify",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~verify",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": "{verify}",
    "description": "Middleware to determine whether the session is verified.\nFor valid sessions, the next middleware is called.",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "The request object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "The response object."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "Invoke the next middleware or route."
      }
    ]
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "validateUidPermissions",
    "memberof": "cpceed-webapp/api/auth/auth-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-manager.js~validateUidPermissions",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-manager.js",
    "importStyle": "{validateUidPermissions}",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 27,
    "kind": "file",
    "name": "cpceed-webapp/api/auth/auth-router.js",
    "content": "const express = require('express');\n\nconst strings = require('api/resources/strings.js');\nconst authManager = require('api/auth/auth-manager');\nconst logger = require('common/logger.js');\n\nconst authRouter = express.Router();\n\n// Get the current User's role.\nauthRouter.get('/', authManager.verify, (req, res) => {\n  if (res.locals.err) {\n    logger.error(res.locals.err);\n    res.status(400).json(res.locals.err).end();\n  }\n\n  res.status(200).json({ role: req.user.role }).end();\n});\n\n// Log the User in on a specific device.\nauthRouter.post('/', (req, res) => {\n  authManager.login(req, res)\n    .then((output) => {\n      // The token is in a cookie, so it doesn't have to be in the body\n      res.status(201).json(output).end();\n    })\n    .catch((err) => {\n      res.status(err.status).json({ message: err.message }).end();\n    });\n});\n\n// Log the user out of a specific device.\nauthRouter.delete('/', authManager.verify, (req, res) => {\n  if (res.locals.err) {\n    res.status(400).json({ message: res.locals.err.message }).end();\n    return;\n  }\n\n  authManager.logout(req.session)\n    .then(() => {\n      res.status(204).clearCookie(strings.cookieName, { path: '/' }).end();\n    })\n    .catch((err) => {\n      res.status(400).json({ message: err.message }).end();\n    });\n});\n\n// Change the user's password.\nauthRouter.put('/password',\n  authManager.verify,\n  authManager.validateUidPermissions,\n  (req, res) => {\n    if (res.locals.err) {\n      res.status(400).json({ message: res.locals.err.message }).end();\n      return;\n    }\n\n    const email = req.body.email;\n    const storedPassword = req.user.password;\n    const password = req.body.password;\n    const newPassword = req.body.newPassword;\n\n    authManager.changePassword(email, storedPassword, password, newPassword)\n      .then(() => {\n        res.status(200).clearCookie(strings.cookieName, { path: '/' }).end();\n      })\n      .catch((err) => {\n        res.status(400).json({ message: err.message }).end();\n      });\n  });\n\n// Change the user's email.\nauthRouter.put('/email',\n  authManager.verify,\n  authManager.validateUidPermissions,\n  (req, res) => {\n    if (res.locals.err) {\n      res.status(400).json({ message: res.locals.err.message }).end();\n      return;\n    }\n\n    const email = req.body.email;\n    const storedPassword = req.user.password;\n    const password = req.body.password;\n    const newEmail = req.body.newEmail;\n\n    authManager.changeEmail(email, storedPassword, password, newEmail)\n      .then(() => {\n        res.status(200).clearCookie(strings.cookieName, { path: '/' }).end();\n      })\n      .catch((err) => {\n        res.status(400).json({ message: err.message }).end();\n      });\n  });\n\nmodule.exports = { router: authRouter };\n",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-router.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "name": "express",
    "memberof": "cpceed-webapp/api/auth/auth-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-router.js~express",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "name": "strings",
    "memberof": "cpceed-webapp/api/auth/auth-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-router.js~strings",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "name": "authManager",
    "memberof": "cpceed-webapp/api/auth/auth-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-router.js~authManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "name": "logger",
    "memberof": "cpceed-webapp/api/auth/auth-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-router.js~logger",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "name": "authRouter",
    "memberof": "cpceed-webapp/api/auth/auth-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/auth/auth-router.js~authRouter",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/auth/auth-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "file",
    "name": "cpceed-webapp/api/connection.js",
    "content": "const mongoose = require('mongoose');\nconst mockgoose = require('mockgoose');\n\nconst mongoURL = process.env.MONGODB_URI || process.env.MONGOLAB_URI;\nmongoose.Promise = global.Promise;\n\n/**\n * Opens a connection from mongoose to the database, wrapping it with\n * mockgoose if `NODE_ENV` is 'test'.\n * @returns {Promise<undefined, Error>} - Resolves when connection is opened.\n */\nfunction open() {\n  return new Promise((resolve, reject) => {\n    if (process.env.NODE_ENV === 'test') {\n      mockgoose(mongoose);\n    }\n\n    mongoose.connect(mongoURL, (err) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve();\n    });\n  });\n}\n\n/**\n * Closes the connection from mongoose to the database, using `unmock` if\n * NODE_ENV is 'test'.\n * @returns {Promise<undefined, Error>} - Resolves when connection is closed.\n */\nfunction close() {\n  if (process.env.NODE_ENV === 'test') {\n    return new Promise((resolve) => {\n      mongoose.unmock(() => {\n        resolve();\n      });\n    });\n  }\n\n  return mongoose.disconnect();\n}\n\nmodule.exports = { open, close };\n",
    "static": true,
    "longname": "cpceed-webapp/api/connection.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 34,
    "kind": "variable",
    "name": "mongoose",
    "memberof": "cpceed-webapp/api/connection.js",
    "static": true,
    "longname": "cpceed-webapp/api/connection.js~mongoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/connection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "name": "mockgoose",
    "memberof": "cpceed-webapp/api/connection.js",
    "static": true,
    "longname": "cpceed-webapp/api/connection.js~mockgoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/connection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "name": "mongoURL",
    "memberof": "cpceed-webapp/api/connection.js",
    "static": true,
    "longname": "cpceed-webapp/api/connection.js~mongoURL",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/connection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "function",
    "name": "open",
    "memberof": "cpceed-webapp/api/connection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/connection.js~open",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/connection.js",
    "importStyle": "{open}",
    "description": "Opens a connection from mongoose to the database, wrapping it with\nmockgoose if `NODE_ENV` is 'test'.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<undefined, Error>} - Resolves when connection is opened."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Resolves when connection is opened."
    }
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "close",
    "memberof": "cpceed-webapp/api/connection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/connection.js~close",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/connection.js",
    "importStyle": "{close}",
    "description": "Closes the connection from mongoose to the database, using `unmock` if\nNODE_ENV is 'test'.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<undefined, Error>} - Resolves when connection is closed."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Resolves when connection is closed."
    }
  },
  {
    "__docId__": 39,
    "kind": "file",
    "name": "cpceed-webapp/api/core/logger.js",
    "content": "const winston = require('winston');\n\n/**\n * Logging tool for API\n *\n * @typedef {function} - ApiLogger\n * @example\n * const logger = require('api/core/logger');\n * logger.trace('Message');\n * logger.debug('Message');\n * logger.info('Message');\n * logger.warn('Message');\n * logger.crit('Message');\n * logger.fatal('Message');\n */\n\n\n// set default log level.\nconst logLevel = 'info';\n\n// Set up logger\nconst customColors = {\n  trace: 'white',\n  debug: 'green',\n  info: 'blue',\n  warn: 'yellow',\n  crit: 'red',\n  fatal: 'red',\n};\n\nconst logger = new (winston.Logger)({\n  colors: customColors,\n  level: logLevel,\n  levels: {\n    fatal: 0,\n    crit: 1,\n    warn: 2,\n    info: 3,\n    debug: 4,\n    trace: 5,\n  },\n  transports: [\n    new (winston.transports.Console)({\n      colorize: true,\n      timestamp: false,\n    }),\n    new (winston.transports.File)({ filename: 'eoc.log' }),\n  ],\n});\n\nwinston.addColors(customColors);\n\n// Extend logger object to properly log 'Error' types\nconst origLog = logger.log;\n\nlogger.log = (...args) => {\n  if (args[1] instanceof Error) {\n    const newArgs = args;\n    newArgs[1] = args[1].stack;\n    origLog.apply(logger, newArgs);\n  } else {\n    origLog.apply(logger, args);\n  }\n};\n\nmodule.exports = logger;\n",
    "static": true,
    "longname": "cpceed-webapp/api/core/logger.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 40,
    "kind": "variable",
    "name": "winston",
    "memberof": "cpceed-webapp/api/core/logger.js",
    "static": true,
    "longname": "cpceed-webapp/api/core/logger.js~winston",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "typedef",
    "name": "-",
    "memberof": "cpceed-webapp/api/core/logger.js",
    "static": true,
    "longname": "cpceed-webapp/api/core/logger.js~-",
    "access": null,
    "description": "Logging tool for API",
    "examples": [
      "const logger = require('api/core/logger');\nlogger.trace('Message');\nlogger.debug('Message');\nlogger.info('Message');\nlogger.warn('Message');\nlogger.crit('Message');\nlogger.fatal('Message');"
    ],
    "lineNumber": 19,
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "-"
    }
  },
  {
    "__docId__": 42,
    "kind": "variable",
    "name": "customColors",
    "memberof": "cpceed-webapp/api/core/logger.js",
    "static": true,
    "longname": "cpceed-webapp/api/core/logger.js~customColors",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"trace\": string, \"debug\": string, \"info\": string, \"warn\": string, \"crit\": string, \"fatal\": string}"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "variable",
    "name": "origLog",
    "memberof": "cpceed-webapp/api/core/logger.js",
    "static": true,
    "longname": "cpceed-webapp/api/core/logger.js~origLog",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "file",
    "name": "cpceed-webapp/api/core/utils.js",
    "content": "const bcrypt = require('bcrypt');\nconst mongoose = require('mongoose');\n\n/**\n * If the new value is defined and non-null, returns the new value.  Otherwise,\n * returns the old value.\n * @param {T} newValue - A new value value that may or may not be defined and\n *     non-null.\n * @param {T} oldValue - A old value that is defined and non-null.\n * @return {T} The new value if it is defined and non-null.  The old value if\n *     the new value is undefined or null.\n * @template T\n */\nconst newIfPresent = (newValue, oldValue) => {\n  if (newValue === undefined || newValue == null) {\n    return oldValue;\n  }\n  return newValue;\n};\n\n/**\n* Utility function to get a MongoClient collection instance from Mongoose.\n* @param {string} connection - The mongoose connection.\n* @param {string} name - The name of the collection.\n* @returns {Promise<Object, Error>} - Resolves with the collection.\n*/\nasync function getCollection(connection, name) {\n  let output;\n\n  try {\n    output = await new Promise((resolve, reject) => {\n      connection.db.collection(name, (err, coll) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(coll);\n      });\n    });\n  } catch (err) {\n    throw err;\n  }\n\n  return output;\n}\n\n/**\n* Utility function to delete all sessions for a given user's email.\n* @param {string} email - The user's email.\n* @returns {Promise<Object, Error>} - Resolves with the number of sessions\n* deleted.\n*/\nasync function deleteSessionsByEmail(email) {\n  let deleted;\n\n  try {\n    // Native MongoClient gets around lack of Session schema\n    const coll = await getCollection(mongoose.connection, 'sessions');\n\n    deleted = await new Promise((resolve, reject) => {\n      coll.remove({ 'session.passport.user': email }, (err, num) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(num);\n      });\n    });\n  } catch (err) {\n    throw err;\n  }\n\n  return deleted;\n}\n\n/**\n* Utility function to compare against a bcrypt'd password.\n* @param {string} password - The password to be compared.\n* @param {string} target - The target of comparison.\n* @returns {Promise<boolean, Error>} - Resolves with a boolean indicating whether\n* or not the password is a match.\n*/\nfunction comparePassword(password, target) {\n  return bcrypt.compare(password, target);\n}\n\nmodule.exports = {\n  newIfPresent,\n  getCollection,\n  deleteSessionsByEmail,\n  comparePassword,\n};\n",
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 45,
    "kind": "variable",
    "name": "bcrypt",
    "memberof": "cpceed-webapp/api/core/utils.js",
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js~bcrypt",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "name": "mongoose",
    "memberof": "cpceed-webapp/api/core/utils.js",
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js~mongoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "function",
    "name": "newIfPresent",
    "memberof": "cpceed-webapp/api/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js~newIfPresent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/utils.js",
    "importStyle": "{newIfPresent}",
    "description": "If the new value is defined and non-null, returns the new value.  Otherwise,\nreturns the old value.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@template",
        "tagValue": "T"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "A new value value that may or may not be defined and\n    non-null."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "oldValue",
        "description": "A old value that is defined and non-null."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": "The new value if it is defined and non-null.  The old value if\n    the new value is undefined or null."
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "getCollection",
    "memberof": "cpceed-webapp/api/core/utils.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js~getCollection",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/utils.js",
    "importStyle": "{getCollection}",
    "description": "Utility function to get a MongoClient collection instance from Mongoose.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object, Error>} - Resolves with the collection."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "The mongoose connection."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the collection."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error>"
      ],
      "spread": false,
      "description": "Resolves with the collection."
    }
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "deleteSessionsByEmail",
    "memberof": "cpceed-webapp/api/core/utils.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js~deleteSessionsByEmail",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/utils.js",
    "importStyle": "{deleteSessionsByEmail}",
    "description": "Utility function to delete all sessions for a given user's email.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object, Error>} - Resolves with the number of sessions\ndeleted."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "The user's email."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error>"
      ],
      "spread": false,
      "description": "Resolves with the number of sessions\ndeleted."
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "comparePassword",
    "memberof": "cpceed-webapp/api/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/core/utils.js~comparePassword",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/core/utils.js",
    "importStyle": "{comparePassword}",
    "description": "Utility function to compare against a bcrypt'd password.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean, Error>} - Resolves with a boolean indicating whether\nor not the password is a match."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password to be compared."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "The target of comparison."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean, Error>"
      ],
      "spread": false,
      "description": "Resolves with a boolean indicating whether\nor not the password is a match."
    }
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "cpceed-webapp/api/errors/auth-errors.js",
    "content": "const errorConstructor = (message, statusCode) => {\n  const error = new Error(message);\n  error.status = statusCode;\n  return error;\n};\n\n/*\n * Not Found: Could we not find something in the databases?\n */\nconst userNotFoundError = errorConstructor('User not found.', 400);\n\nconst sessionNotFoundError = errorConstructor('No session found.', 400);\n\n/*\n * Invalid: Did the user give us something that was wrong?\n */\nconst invalidLoginInfoError = errorConstructor('Invalid username/password.', 401);\n\nconst invalidPasswordError = errorConstructor('Invalid password.', 401);\n\nconst invalidSessionError = errorConstructor('Invalid session token.', 401);\n\n/*\n * Missing: Did the user forget to give us something?\n */\nconst missingTokenError = errorConstructor('Token not found.', 400);\n\nconst unauthorizedError = errorConstructor('Unauthorized.', 401);\n\nmodule.exports = {\n  errorConstructor,\n  userNotFoundError,\n  sessionNotFoundError,\n  invalidLoginInfoError,\n  invalidPasswordError,\n  invalidSessionError,\n  missingTokenError,\n  unauthorizedError,\n};\n",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "errorConstructor",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~errorConstructor",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{errorConstructor}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "statusCode",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "userNotFoundError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~userNotFoundError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{userNotFoundError}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "sessionNotFoundError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~sessionNotFoundError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{sessionNotFoundError}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "invalidLoginInfoError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~invalidLoginInfoError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{invalidLoginInfoError}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "invalidPasswordError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~invalidPasswordError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{invalidPasswordError}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "invalidSessionError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~invalidSessionError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{invalidSessionError}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "missingTokenError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~missingTokenError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{missingTokenError}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "unauthorizedError",
    "memberof": "cpceed-webapp/api/errors/auth-errors.js",
    "static": true,
    "longname": "cpceed-webapp/api/errors/auth-errors.js~unauthorizedError",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/errors/auth-errors.js",
    "importStyle": "{unauthorizedError}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "cpceed-webapp/api/events/event-manager.js",
    "content": "const eventModels = require('api/events/event-models');\n\nconst Event = eventModels.Event;\n\n/**\n * Callback used by event CRUD methods that returns a single event.\n * @typdef {function} EventCallback\n * @param {Error} err - An error that occurred during the operation. Null if no\n *    errors occurred.\n * @param {Event} event - The event operated on.\n */\n\n/**\n * Creates a event using fields from the request object then calls back when\n * the database save finishes.\n * @param {Object} reqData - The request object containing the event data to\n *   be created.\n * @param {Object} locals - An object containing the current request's local\n *   variables.\n * @param {EventCallback} createCallback - Called once the operation finishes.\n */\nconst createEvent = (reqData, locals, createCallback) => {\n  // TODO(asclines): Add checks for required data and expection handling\n\n  // TODO(asclines): Check the UID of the logged in user and make sure they\n  // are either the creator of the event or an admin.\n\n  const event = new Event({\n    creator: reqData.creator,\n    category: reqData.category,\n    datetime: reqData.datetime,\n    location: reqData.location,\n    title: reqData.title,\n    description: reqData.description,\n  });\n  event.save(createCallback);\n};\n\n/**\n * Modifies a specific event with the fields in the request object then calls\n * back when the database update finishes.\n * @param {string} event Uid - The UID corresponding to the event to be\n *   modified.\n * @param {Object} reqData - The request object containing the new event fields.\n * @param {Object} locals - An object containg the current request's local\n *   variables.\n * @param {EventCallback} modifyCallback - Called once the operation finishes.\n */\nconst modifyEvent = (eventUid, reqData, locals, modifyCallback) => {\n  // TODO(asclines): Add checks for required data and expection handling\n\n  // TODO(asclines): Check the UID of the logged in user and make sure they\n  // are either the creator of the event or an admin.\n  const conditions = { _id: eventUid };\n  const update = {};\n\n  Object.keys(reqData).forEach((key) => {\n    update[key] = reqData[key];\n  });\n\n  const options = { new: true };\n  Event.findOneAndUpdate(conditions, { $set: update }, options, modifyCallback);\n};\n\n\n/**\n * Deletes a specific event and calls back once database deletion finishes.\n * @param {string} eventUid - The UID of the event to be deleted.\n * @param {Object} locals - An object containg the current request's local\n *   variables.\n * @param {EventCallback} deleteCallback - Called once the operation is done.\n */\nconst deleteEvent = (eventUid, locals, deleteCallback) => {\n  // TODO(asclines): Check the UID of the logged in user and make sure they\n  // are either the creator of the event or an admin.\n\n  // TODO(asclines): Look into better error handling.\n\n  Event.findByIdAndRemove(eventUid, deleteCallback);\n};\n\n/**\n * Finds a specific event and calls back once find operation finishes.\n * @param {string} eventUid - The UID of the event to be found.\n * @param {Object} locals - An object containing the current request's\n *   local variables.\n * @param {EventCallback} getCallback - Called once the operation is done.\n */\nconst getEventById = (eventUid, locals, getCallback) => {\n  // TODO(asclines): Add checks for required data and expection handling\n\n  // TODO(asclines): Check the UID of the logged in user and make sure they\n  // have permisssion to get this event.\n\n  Event.findById(eventUid, (err, results) => {\n    const eventData = {\n      creator: results.creator,\n      category: results.category,\n      datetime: results.datetime,\n      location: results.location,\n      title: results.title,\n      description: results.description,\n    };\n    getCallback(err, eventData);\n  });\n};\n\nconst getAllEvents = (reqData, locals, getAllCallback) => {\n // TODO(asclines): Add checks for required data and expection handling\n\n//   // TODO(asclines): Check the UID of the logged in user and make sure they\n//   // have permission to call this method.\n\n  const conditions = locals.conditions || {};\n  Event.find(conditions, (err, events) => {\n    if (err) {\n      getAllCallback(err);\n      return;\n    }\n\n    const results = {};\n    events.forEach((event) => {\n      results[event.id] = event;\n    });\n\n    getAllCallback(err, results);\n  });\n};\n\n\nmodule.exports = {\n  createEvent,\n  modifyEvent,\n  deleteEvent,\n  getEventById,\n  getAllEvents,\n};\n",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "eventModels",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~eventModels",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "Event",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~Event",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "createEvent",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~createEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": "{createEvent}",
    "description": "Creates a event using fields from the request object then calls back when\nthe database save finishes.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reqData",
        "description": "The request object containing the event data to\n  be created."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's local\n  variables."
      },
      {
        "nullable": null,
        "types": [
          "EventCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "createCallback",
        "description": "Called once the operation finishes."
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "modifyEvent",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~modifyEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": "{modifyEvent}",
    "description": "Modifies a specific event with the fields in the request object then calls\nback when the database update finishes.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Uid - The UID corresponding to the event to be\n  modified."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reqData",
        "description": "The request object containing the new event fields."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containg the current request's local\n  variables."
      },
      {
        "nullable": null,
        "types": [
          "EventCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "modifyCallback",
        "description": "Called once the operation finishes."
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "deleteEvent",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~deleteEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": "{deleteEvent}",
    "description": "Deletes a specific event and calls back once database deletion finishes.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventUid",
        "description": "The UID of the event to be deleted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containg the current request's local\n  variables."
      },
      {
        "nullable": null,
        "types": [
          "EventCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "deleteCallback",
        "description": "Called once the operation is done."
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "getEventById",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~getEventById",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": "{getEventById}",
    "description": "Finds a specific event and calls back once find operation finishes.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventUid",
        "description": "The UID of the event to be found."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's\n  local variables."
      },
      {
        "nullable": null,
        "types": [
          "EventCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "getCallback",
        "description": "Called once the operation is done."
      }
    ]
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "getAllEvents",
    "memberof": "cpceed-webapp/api/events/event-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/events/event-manager.js~getAllEvents",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-manager.js",
    "importStyle": "{getAllEvents}",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "reqData",
        "types": [
          "*"
        ]
      },
      {
        "name": "locals",
        "types": [
          "*"
        ]
      },
      {
        "name": "getAllCallback",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "cpceed-webapp/api/events/event-models.js",
    "content": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\n\nconst options = {\n  timestamps: true,\n};\n\n/**\n * Event Object\n * @typedef {Object} EventSchema\n * @param {string} creator - UID of event creator\n * @param {string} category - Category of the event\n * @param {Date} datetime - Date & time of the event\n * @param {string} location - Location of event\n * @param {string} title - Title of the event\n * @param {string} description - Description of the event\n */\nconst eventSchema = new Schema({\n  creator: String,\n  category: String,\n  datetime: Date,\n  location: String,\n  title: String,\n  description: String,\n}, options);\n\nconst Event = mongoose.model('Event', eventSchema);\n\nmodule.exports = { Event };\n",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-models.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "mongoose",
    "memberof": "cpceed-webapp/api/events/event-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-models.js~mongoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "Schema",
    "memberof": "cpceed-webapp/api/events/event-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-models.js~Schema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "options",
    "memberof": "cpceed-webapp/api/events/event-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-models.js~options",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"timestamps\": boolean}"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "typedef",
    "name": "EventSchema",
    "memberof": "cpceed-webapp/api/events/event-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-models.js~EventSchema",
    "access": null,
    "description": "Event Object",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "creator",
        "description": "UID of event creator"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "category",
        "description": "Category of the event"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "datetime",
        "description": "Date & time of the event"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "Location of event"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Title of the event"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Description of the event"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "EventSchema"
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "Event",
    "memberof": "cpceed-webapp/api/events/event-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-models.js~Event",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-models.js",
    "importStyle": "{Event}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "cpceed-webapp/api/events/event-router.js",
    "content": "const express = require('express');\nconst eventManager = require('api/events/event-manager');\nconst logger = require('common/logger.js');\nconst authManager = require('api/auth/auth-manager');\n\nconst eventRouter = express.Router();\n\n/**\n * Route for creating a new event\n * - Endpoint: `/api/events`\n * - Verb: POST\n *\n * @typedef {function} Route-CreateEvent\n * @param {Object} req - Express request object\n * @param {EventSchema} req.body - The event to be created\n * @param {Object} res - Express result object\n * @param {string} res.body - UID of created event or error message\n * @param {number} res.status - 201 on success\n */\neventRouter.post('/',\n  authManager.verify,\n  (req, res) => {\n    eventManager.createEvent(req.body, {}, (err, event) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).json(err).end();\n        return;\n      }\n      res.status(201).json({ uid: event.id }).end();\n    });\n  });\n\n/**\n * Route for modifying an existing event\n * - Endpoint: `/api/events`\n * - Verb: PUT\n *\n * @typedef {function} Route-ModifyEvent\n * @param {Object} req - Express request object\n * @param {string} req.query.uid - UID of event to be updated\n * @param {string} req.query.token - Admin or creator of event\n * @param {EventSchema} req.body - Updated fields of the event\n * @param {Object} res - Express result object\n * @param {EventSchema|string} res.body - Modified event | error message\n * @param {number} res.status - 200 on success\n */\neventRouter.put('/',\n  authManager.verify,\n  (req, res) => {\n    eventManager.modifyEvent(req.query.uid, req.body, res.locals,\n    (err, eventData) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).json(err).end();\n        return;\n      }\n      res.status(200).json(eventData).end();\n    });\n  });\n\n/**\n * Route for deleting an existing event\n * # API\n * - Endpoint: `/api/events`\n * - Verb: DELETE\n *\n * @typedef {function} Route-DeleteEvent\n * @param {Object} req - Express request object\n * @param {string} req.query.uid - UID of event to be deleted\n * @param {string} req.query.token - Admin or creator of event\n * @param {Object} res - Express result object\n * @param {number} res.status - 200 on success\n */\neventRouter.delete('/',\n  authManager.verify,\n  (req, res) => {\n    eventManager.deleteEvent(req.query.uid, res.locals, (err, result) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).json(err).end();\n        return;\n      }\n\n      res.status(200).json(result).end();\n    });\n  });\n\n/**\n * Route for retrieving a single, existing event by its UID\n * - Endpoint: `/api/events`\n * - Verb: GET\n *\n * @typedef {function} Route-GetEventById\n * @param {Object} req - Express request object\n * @param {string} req.query.uid - UID of event to be retrieved\n * @param {string} req.query.token - Admin or creator of event\n * @param {Object} res - Express result object\n * @param {number} res.status - 200 on success\n */\neventRouter.get('/',\n  authManager.verify,\n  (req, res) => {\n    eventManager.getEventById(req.query.uid, {},\n    (err, event) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).json(err).end();\n        return;\n      }\n      res.status(200).json(event).end();\n    });\n  });\n\n/**\n * Route for retrieving all events\n * # API\n * - Endpoint: `/api/events/all`\n * - Verb: GET\n *\n * @typedef {function} Route-GetAllEvents\n * @param {Object} req - Express request object\n * @property {string} req.query.token - Anybody\n * @param {Object} res - Express result object\n * @property {number} res.status - 200 on success\n */\neventRouter.get('/all',\n  authManager.verify,\n  (req, res) => {\n    eventManager.getAllEvents(req.body, {}, (err, results) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).json(err).end();\n        return;\n      }\n\n      res.status(200).json(results).end();\n    });\n  });\n\nmodule.exports = { eventRouter };\n",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "express",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~express",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "eventManager",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~eventManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "logger",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~logger",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "authManager",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~authManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "typedef",
    "name": "Route-CreateEvent",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~Route-CreateEvent",
    "access": null,
    "description": "Route for creating a new event\n- Endpoint: `/api/events`\n- Verb: POST",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "EventSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "The event to be created"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "UID of created event or error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "201 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-CreateEvent"
    }
  },
  {
    "__docId__": 80,
    "kind": "typedef",
    "name": "Route-ModifyEvent",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~Route-ModifyEvent",
    "access": null,
    "description": "Route for modifying an existing event\n- Endpoint: `/api/events`\n- Verb: PUT",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.uid",
        "description": "UID of event to be updated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin or creator of event"
      },
      {
        "nullable": null,
        "types": [
          "EventSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "Updated fields of the event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "EventSchema",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "Modified event | error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-ModifyEvent"
    }
  },
  {
    "__docId__": 81,
    "kind": "typedef",
    "name": "Route-DeleteEvent",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~Route-DeleteEvent",
    "access": null,
    "description": "Route for deleting an existing event\n# API\n- Endpoint: `/api/events`\n- Verb: DELETE",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.uid",
        "description": "UID of event to be deleted"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin or creator of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-DeleteEvent"
    }
  },
  {
    "__docId__": 82,
    "kind": "typedef",
    "name": "Route-GetEventById",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~Route-GetEventById",
    "access": null,
    "description": "Route for retrieving a single, existing event by its UID\n- Endpoint: `/api/events`\n- Verb: GET",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.uid",
        "description": "UID of event to be retrieved"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin or creator of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-GetEventById"
    }
  },
  {
    "__docId__": 83,
    "kind": "typedef",
    "name": "Route-GetAllEvents",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~Route-GetAllEvents",
    "access": null,
    "description": "Route for retrieving all events\n# API\n- Endpoint: `/api/events/all`\n- Verb: GET",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Anybody"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-GetAllEvents"
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "eventRouter",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~eventRouter",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/events/event-router.js",
    "importStyle": "{eventRouter}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "typedef",
    "name": "Route-CreateEvent",
    "memberof": "cpceed-webapp/api/events/event-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/events/event-router.js~Route-CreateEvent",
    "access": null,
    "description": "Route for creating a new event\n- Endpoint: `/api/events`\n- Verb: POST",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "EventSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "The event to be created"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "UID of created event or error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "201 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-CreateEvent"
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "cpceed-webapp/api/objects/response.js",
    "content": "const ResponseObject = (status, object) => {\n  this.status = status;\n  this.object = object;\n};\n\nmodule.exports = { ResponseObject };\n",
    "static": true,
    "longname": "cpceed-webapp/api/objects/response.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "ResponseObject",
    "memberof": "cpceed-webapp/api/objects/response.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/objects/response.js~ResponseObject",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/objects/response.js",
    "importStyle": "{ResponseObject}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "status",
        "types": [
          "*"
        ]
      },
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "cpceed-webapp/api/passport-config.js",
    "content": "const passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\n\nconst authErrors = require('api/errors/auth-errors');\nconst User = require('api/users/user-models').User;\n\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passwordField: 'password',\n},\n(email, password, done) => {\n  let userStorage;\n\n  User.findOne({ email }).exec()\n    .catch((err) => {\n      done(err);\n    })\n    .then((user) => {\n      // No user found for the given email address.\n      if (!user) {\n        throw authErrors.invalidLoginInfoError;\n      }\n\n      userStorage = user;\n      return user.comparePassword(password);\n    })\n    .then((isMatch) => {\n      if (!isMatch) {\n        throw authErrors.invalidLoginInfoError;\n      }\n\n      done(null, userStorage);\n    })\n    .catch((err) => {\n      done(null, false, { message: err.message });\n    });\n}));\n\npassport.serializeUser((user, done) => {\n  done(null, user.email);\n});\n\npassport.deserializeUser((email, done) => {\n  User.findOne({ email }).exec()\n    .catch((err) => {\n      done(err, null);\n    })\n    .then((user) => {\n      done(null, user);\n    });\n});\n\nmodule.exports = passport;\n",
    "static": true,
    "longname": "cpceed-webapp/api/passport-config.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "LocalStrategy",
    "memberof": "cpceed-webapp/api/passport-config.js",
    "static": true,
    "longname": "cpceed-webapp/api/passport-config.js~LocalStrategy",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/passport-config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "authErrors",
    "memberof": "cpceed-webapp/api/passport-config.js",
    "static": true,
    "longname": "cpceed-webapp/api/passport-config.js~authErrors",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/passport-config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "User",
    "memberof": "cpceed-webapp/api/passport-config.js",
    "static": true,
    "longname": "cpceed-webapp/api/passport-config.js~User",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/passport-config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "passport",
    "memberof": "cpceed-webapp/api/passport-config.js",
    "static": true,
    "longname": "cpceed-webapp/api/passport-config.js~passport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/passport-config.js",
    "importStyle": "passport",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "cpceed-webapp/api/reports/report-manager.js",
    "content": "const reportModels = require('api/reports/report-models');\nconst logger = require('common/logger');\nconst newIfPresent = require('api/core/utils').newIfPresent;\n\nconst Report = reportModels.Report;\nconst EventReport = reportModels.EventReport;\nconst OtherReport = reportModels.OtherReport;\n\n/**\n * Callback used by report CRUD methods that return only one report.\n * @callback reportCallback\n * @param {Error} err - An error that occurred during the operation.  Null if no\n *     errors occurred.\n * @param {Report} report - The report operated on.\n */\n\n/**\n * Creates a report with the fields in the request object, and calls a callback\n * when the database save finishes.\n * @param {Object} reqData - The request object representing the report to be\n *     created.\n * @param {Object} locals - An object containing the current request's local\n *     variables.\n * @param {reportCallback} createCallback - Called once the operation finishes.\n */\nconst createReport = (reqData, locals, createCallback) => {\n  // TODO(jmtaber129): Check that the student UID matches the requesting user,\n  // or the requesting user is an admin.\n  let report;\n  if (reqData.type === 'event') {\n    report = new EventReport({\n      approvalStatus: false,\n      student: reqData.student,\n      event: reqData.event,\n    });\n  } else if (reqData.type === 'other') {\n    report = new OtherReport({\n      approvalStatus: false,\n      student: reqData.student,\n      category: reqData.category,\n      datetime: reqData.datetime,\n      location: reqData.location,\n      title: reqData.title,\n      description: reqData.description,\n    });\n  } else {\n    // TODO(jmtaber129): Better error handling for invalid report types.\n    createCallback({ message: 'Invalid report type.' });\n    return;\n  }\n\n  report.save(createCallback);\n};\n\n/**\n * Modifies a specific report according to the fields in the request object, and\n * calls a callback when the database save finishes.\n * @param {string} reportUid - The UID corresponding to the report to be\n *     modified.\n * @param {Object} reqData - The request object containing the fields to be\n *     modified.\n * @param {Object} locals - An object containing the current request's local\n *     variables.\n * @param {reportCallback} modifyCallback - Called once the operation finishes.\n */\nconst modifyReport = (reportUid, reqData, locals, modifyCallback) => {\n  // TODO(asclines): Add checks for required data and expection handling\n\n  // TODO(asclines): Check the UID of the logged in user and make sure they\n  // are either the creator of the report or an admin.\n  const conditions = { _id: reportUid };\n  const update = {};\n\n  if (reqData.type !== 'event' && reqData.type !== 'other') {\n    modifyCallback(new Error('Invalid report type'));\n    return;\n  }\n\n\n  Object.keys(reqData).forEach((key) => {\n    if (key !== 'type') { update[key] = reqData[key]; }\n  });\n\n  const options = { new: true };\n\n  if (reqData.type === 'other') {\n    OtherReport.findOneAndUpdate(conditions, { $set: update }, options, modifyCallback);\n  } else {\n    EventReport.findOneAndUpdate(conditions, { $set: update }, options, modifyCallback);\n  }\n};\n\n/**\n * Deletes a specific report, and calls a callback once the database deletion\n * finishes.\n * @param {string} reportUid - The UID corresponding to the report to be\n *     deleted.\n * @param {Object} locals - An object containing the current request's local\n *     variables.\n * @param {reportCallback} deleteCallback - Called once the operation finishes.\n */\nconst deleteReport = (reportUid, locals, deleteCallback) => {\n  // TODO(asclines): Check the UID of the logged in user and make sure they\n  // are either the creator of the report or an admin.\n\n  // TODO(asclines): Look into better error handling.\n  Report.findByIdAndRemove(reportUid, deleteCallback);\n};\n\n/**\n * Finds a specific report, and calls a callback once the report is found.\n * @param {string} reportUid - The UID corresponding to the report to be found.\n * @param {Object} locals - An object containing the current request's local\n *     variables.\n * @param {reportCallback} queryCallback - Called once the operation finishes.\n */\nconst getReportById = (reportUid, locals, queryCallback) => {\n  Report.findById(reportUid, (err, report) => {\n    if (err) {\n      queryCallback(err);\n      return;\n    }\n\n    // If the report's student UID does not match the user UID, and the user is\n    // not an admin, 'report' should not be returned.\n    // TODO(jmtaber129): Check report's student UID and user UID, and add error\n    // handling.\n\n    queryCallback(err, report);\n  });\n};\n\n/**\n * Callback used by report CRUD methods that return multiple reports.\n * @callback multipleReportsCallback\n * @param {Error} err - An error that occurred during the operation.  Null if no\n *     errors occurred.\n * @param {Object.<string, Report>} reports - An object of reports with their\n *     UIDs as keys.\n */\n\n/**\n * Finds all reports, and calls a callback once all reports are found.\n * @param {Object} reqData - An object containing additional search parameters\n *     (not yet implemented).\n * @param {Object} locals - An object containing the current request's local\n *     variables.\n * @param {multipleReportsCallback} queryCallback - Called once the operation\n *     finishes.\n */\nconst getAllReports = (reqData, locals, queryCallback) => {\n  const conditions = {};\n\n  // If the user is not an admin, limit the results to reports with the user's\n  // UID.  If the user is not an admin, and one of the query parameters is a\n  // student UID other than their own, handle it as an error.\n  // TODO(jmtaber129): Set conditions.student to user UID for non-admins.\n  // TODO(jmtaber129): Add error handling for requesting reports with student\n  // UIDs other than the UID of a non-admin user.\n\n  // TODO(jmtaber129): Set additional conditions once query parameters are\n  // accepted in the request object.\n\n  // Both report types are in the same collection, and querying a model queries\n  // the entire collection, so querying one report model will return results for\n  // both report types.\n  Report.find(conditions, (err, reports) => {\n    if (err) {\n      queryCallback(err);\n      return;\n    }\n\n    const returnObject = {};\n\n    reports.forEach((report) => {\n      returnObject[report.id] = report;\n\n      // TODO(jmtaber129): Add point value to report in 'returnObject'.\n    });\n\n    queryCallback(err, returnObject);\n  });\n};\n\nmodule.exports = { createReport,\n  modifyReport,\n  deleteReport,\n  getReportById,\n  getAllReports };\n",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "reportModels",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~reportModels",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "logger",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~logger",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "newIfPresent",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~newIfPresent",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "Report",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~Report",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "EventReport",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~EventReport",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "OtherReport",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~OtherReport",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "createReport",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~createReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": "{createReport}",
    "description": "Creates a report with the fields in the request object, and calls a callback\nwhen the database save finishes.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reqData",
        "description": "The request object representing the report to be\n    created."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's local\n    variables."
      },
      {
        "nullable": null,
        "types": [
          "reportCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "createCallback",
        "description": "Called once the operation finishes."
      }
    ]
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "modifyReport",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~modifyReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": "{modifyReport}",
    "description": "Modifies a specific report according to the fields in the request object, and\ncalls a callback when the database save finishes.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reportUid",
        "description": "The UID corresponding to the report to be\n    modified."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reqData",
        "description": "The request object containing the fields to be\n    modified."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's local\n    variables."
      },
      {
        "nullable": null,
        "types": [
          "reportCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "modifyCallback",
        "description": "Called once the operation finishes."
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "deleteReport",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~deleteReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": "{deleteReport}",
    "description": "Deletes a specific report, and calls a callback once the database deletion\nfinishes.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reportUid",
        "description": "The UID corresponding to the report to be\n    deleted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's local\n    variables."
      },
      {
        "nullable": null,
        "types": [
          "reportCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "deleteCallback",
        "description": "Called once the operation finishes."
      }
    ]
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "getReportById",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~getReportById",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": "{getReportById}",
    "description": "Finds a specific report, and calls a callback once the report is found.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reportUid",
        "description": "The UID corresponding to the report to be found."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's local\n    variables."
      },
      {
        "nullable": null,
        "types": [
          "reportCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "queryCallback",
        "description": "Called once the operation finishes."
      }
    ]
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "getAllReports",
    "memberof": "cpceed-webapp/api/reports/report-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-manager.js~getAllReports",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-manager.js",
    "importStyle": "{getAllReports}",
    "description": "Finds all reports, and calls a callback once all reports are found.",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reqData",
        "description": "An object containing additional search parameters\n    (not yet implemented)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": "An object containing the current request's local\n    variables."
      },
      {
        "nullable": null,
        "types": [
          "multipleReportsCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "queryCallback",
        "description": "Called once the operation\n    finishes."
      }
    ]
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "cpceed-webapp/api/reports/report-models.js",
    "content": "const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\n\nconst options = { discriminatorKey: 'type' };\n\nconst reportSchema = new Schema({\n  approvalStatus: Boolean,\n  student: String,\n},\n    options);\n\nconst eventReportSchema = new Schema({ event: String }, options);\n\nconst otherReportSchema = new Schema({\n  category: String,\n  datetime: Date,\n  location: String,\n  title: String,\n  description: String,\n},\n    options);\n\nconst Report = mongoose.model('Report', reportSchema);\n\nconst EventReport = Report.discriminator('EventReport', eventReportSchema);\n\nconst OtherReport = Report.discriminator('OtherReport', otherReportSchema);\n\nmodule.exports = { Report, EventReport, OtherReport };\n",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "mongoose",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~mongoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "Schema",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~Schema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "options",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~options",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"discriminatorKey\": string}"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "reportSchema",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~reportSchema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "Schema"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "eventReportSchema",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~eventReportSchema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "Schema"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "otherReportSchema",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~otherReportSchema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "Schema"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "Report",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~Report",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": "{Report}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "EventReport",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~EventReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": "{EventReport}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "OtherReport",
    "memberof": "cpceed-webapp/api/reports/report-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-models.js~OtherReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-models.js",
    "importStyle": "{OtherReport}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "cpceed-webapp/api/reports/report-router.js",
    "content": "const express = require('express');\nconst reportManager = require('api/reports/report-manager');\nconst logger = require('common/logger.js');\nconst authManager = require('api/auth/auth-manager');\n\n\nconst reportRouter = express.Router();\n\n\n/**\n * Route for creating a new report\n * - Endpoint: `/api/reports`\n * - Verb: POST\n *\n * @typedef {function} Route-CreateReport\n * @param {Object} req - Express request object\n * @param {Object} req.body - The report to be created\n * @param {Object} res - Express result object\n * @param {string} res.body - UID of created report or error message\n * @param {number} res.status - 201 on success\n */\nreportRouter.post('/',\n  authManager.verify,\n  (req, res) => {\n    reportManager.createReport(req.body, {}, (err, report) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).send(err).end();\n        return;\n      }\n\n      res.status(201).json({ uid: report.id }).end();\n    });\n  });\n\n/**\n * Route for modifying an existing report\n * - Endpoint: `/api/reports`\n * - Verb: POST\n *\n * @typedef {function} Route-ModifyReport\n * @param {Object} req - Express request object\n * @param {string} req.query.uid - UID of report to be updated\n * @param {string} req.query.token - Admin or creator of report\n * @param {Object} req.body - Updated fields of the report\n * @param {Object} res - Express result object\n * @param {EventSchema|string} res.body - Modified report | error message\n * @param {number} res.status - 200 on success\n */\nreportRouter.put('/',\n  authManager.verify,\n  (req, res) => {\n    reportManager.modifyReport(req.query.uid, req.body, res.locals,\n    (err, report) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).send(err).end();\n        return;\n      }\n\n      res.status(200).json(report).end();\n    });\n  });\n\n/**\n * Route for deleting an existing event\n * - Endpoint: `/api/reports`\n * - Verb: DELETE\n *\n * @typedef {function} Route-DeleteReport\n * @param {Object} req - Express request object\n * @property {string} req.query.uid - UID of report to be deleted\n * @property {string} req.query.token - Admin or creator of report\n * @param {Object} res - Express result object\n * @property {number} res.status - 200 on success\n */\nreportRouter.delete('/',\n  authManager.verify,\n  (req, res) => {\n    reportManager.deleteReport(req.query.uid, {}, (err) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).send(err).end();\n        return;\n      }\n\n      res.status(204).end();\n    });\n  });\n\nreportRouter.get('/', (req, res) => {\n  reportManager.getReportById(req.query.uid, {},\n    (err, report) => {\n      if (err) {\n        logger.error(err);\n        res.status(400).send(err).end();\n        return;\n      }\n      res.status(200).json(report).end();\n    });\n});\n\n/**\n * Route for retrieving a single, existing event by its UID\n * - Endpoint: `/api/reports`\n * - Verb: GET\n *\n * @typedef {function} Route-GetReportById\n * @param {Object} req - Express request object\n * @param {string} req.query.uid - UID of report to be retrieved\n * @param {string} req.query.token - Admin or creator of report\n * @param {Object} res - Express result object\n * @param {number} res.status - 200 on success\n */\nreportRouter.get('/', (req, res) => {\n  reportManager.getAllReports(req.params, {}, (err, reports) => {\n    if (err) {\n      logger.error(err);\n      res.status(400).send(err).end();\n      return;\n    }\n\n    res.status(200).json(reports).end();\n  });\n});\n\nmodule.exports = { reportRouter };\n",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "express",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~express",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "reportManager",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~reportManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "logger",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~logger",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "authManager",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~authManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "typedef",
    "name": "Route-CreateReport",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~Route-CreateReport",
    "access": null,
    "description": "Route for creating a new report\n- Endpoint: `/api/reports`\n- Verb: POST",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "The report to be created"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "UID of created report or error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "201 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-CreateReport"
    }
  },
  {
    "__docId__": 121,
    "kind": "typedef",
    "name": "Route-ModifyReport",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~Route-ModifyReport",
    "access": null,
    "description": "Route for modifying an existing report\n- Endpoint: `/api/reports`\n- Verb: POST",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.uid",
        "description": "UID of report to be updated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin or creator of report"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "Updated fields of the report"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "EventSchema",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "Modified report | error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-ModifyReport"
    }
  },
  {
    "__docId__": 122,
    "kind": "typedef",
    "name": "Route-DeleteReport",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~Route-DeleteReport",
    "access": null,
    "description": "Route for deleting an existing event\n- Endpoint: `/api/reports`\n- Verb: DELETE",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.uid",
        "description": "UID of report to be deleted"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin or creator of report"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-DeleteReport"
    }
  },
  {
    "__docId__": 123,
    "kind": "typedef",
    "name": "Route-GetReportById",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~Route-GetReportById",
    "access": null,
    "description": "Route for retrieving a single, existing event by its UID\n- Endpoint: `/api/reports`\n- Verb: GET",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.uid",
        "description": "UID of report to be retrieved"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin or creator of report"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-GetReportById"
    }
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "reportRouter",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~reportRouter",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/reports/report-router.js",
    "importStyle": "{reportRouter}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "typedef",
    "name": "Route-CreateReport",
    "memberof": "cpceed-webapp/api/reports/report-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/reports/report-router.js~Route-CreateReport",
    "access": null,
    "description": "Route for creating a new report\n- Endpoint: `/api/reports`\n- Verb: POST",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "The report to be created"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "UID of created report or error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "201 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-CreateReport"
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "cpceed-webapp/api/router.js",
    "content": "const express = require('express');\n\n// Routers.\nconst auth = require('./auth/auth-router.js');\nconst events = require('./events/event-router.js');\nconst report = require('./reports/report-router.js');\nconst user = require('./users/user-router.js');\n\n// App routes.\nconst router = express.Router();\nrouter.use('/users', user.userRouter);\nrouter.use('/events', events.eventRouter);\nrouter.use('/reports', report.reportRouter);\nrouter.use('/auth', auth.router);\n\nmodule.exports = router;\n",
    "static": true,
    "longname": "cpceed-webapp/api/router.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "express",
    "memberof": "cpceed-webapp/api/router.js",
    "static": true,
    "longname": "cpceed-webapp/api/router.js~express",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "auth",
    "memberof": "cpceed-webapp/api/router.js",
    "static": true,
    "longname": "cpceed-webapp/api/router.js~auth",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "events",
    "memberof": "cpceed-webapp/api/router.js",
    "static": true,
    "longname": "cpceed-webapp/api/router.js~events",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "report",
    "memberof": "cpceed-webapp/api/router.js",
    "static": true,
    "longname": "cpceed-webapp/api/router.js~report",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "user",
    "memberof": "cpceed-webapp/api/router.js",
    "static": true,
    "longname": "cpceed-webapp/api/router.js~user",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "router",
    "memberof": "cpceed-webapp/api/router.js",
    "static": true,
    "longname": "cpceed-webapp/api/router.js~router",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/router.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "cpceed-webapp/api/users/user-manager.js",
    "content": "const userModels = require('api/users/user-models');\n\nconst User = userModels.User;\nconst Student = userModels.Student;\nconst Admin = userModels.Admin;\n\n/**\n * Callback for {@link createUser}\n * @typedef {Object} CreateUserCallback\n * @param {Object} err - The error.\n * @param {string} id - The user UID.\n */\n\n/**\n * Given User information, create a User.\n * @param {Object} data - The request body data.\n * @param {String} data.role - The user role.\n * @param {String} data.email - The user email address.\n * @param {String} data.password - The user password.\n * @param {String} data.name - The user name.\n * @param {CreateUserCallback} next - The callback function to run after this function\n *     finishes.\n */\nconst createUser = (data, next) => {\n  // Ensure the required data is available.\n  if (!data) {\n    next({ err: 'Required parameters not found.' });\n    return;\n  }\n\n  // TODO(NilsG-S): Password validation\n  const info = {\n    email: data.email,\n    password: data.password,\n    name: data.name,\n    role: data.role,\n  };\n\n  let user;\n\n  if (data.role === 'student') {\n    // Create a student.\n    info.studentId = data.studentId;\n    user = new Student(info);\n  } else if (data.role === 'admin') {\n    // Create an admin.\n    user = new Admin(info);\n  } else {\n    next({ err: 'Valid role not found.' });\n    return;\n  }\n\n  User.findOne({ email: user.email }, (userErr, existingUser) => {\n    if (userErr) {\n      next(userErr);\n    } else if (existingUser) {\n      next({ err: 'Account with that email address already exists.' });\n    } else {\n      user.save((saveErr, dbUser) => {\n        next(saveErr, (dbUser || {}).id);\n      });\n    }\n  });\n};\n\n/**\n* Callback for {@link modifyUser}\n* @typedef {Object} ModifyUserCallback\n* @param {Object} - The error\n* @param {UserSchema} - The modified user object\n*/\n\n\n /**\n * Updates the user with the passed in values.\n * This method does NOT delete fields\n * @param {string} userUid - The UID of the user to be updated\n * @param {Object} reqData - The request data\n * @param {Object} locals\n * @param {ModifyUserCallback} modifyCallback\n */\nconst modifyUser = (userUid, reqData, locals, modifyCallback) => {\n  // TODO(NilsG-S): modifyUser cannot be used to modify email or password\n  const conditions = { _id: userUid };\n  const update = {};\n\n  Object.keys(reqData).forEach((key) => {\n    update[key] = reqData[key];\n  });\n\n  const options = { new: true };\n\n  Student.findOneAndUpdate(conditions, { $set: update }, options,\n    (err, results) => {\n      if (err) {\n        modifyCallback(err);\n        return;\n      }\n\n      const user = {\n        uid: results.id,\n        email: results.email,\n        name: results.name,\n        role: results.role,\n      };\n\n      if (user.role === 'student') {\n        user.points = results.points;\n        user.isApproved = results.isApproved;\n      }\n\n      modifyCallback(err, user);\n    });\n};\n\n/**\n* Callback for {@link deleteUser}\n* @typedef {Object} DeleteUserCallback\n* @param {Object} - error\n*/\n\n/**\n* Deletes the user from the database.\n* @param {string} userUid - The UID of the user to be updated.\n* @param {Object} locals\n* @param {DeleteUserCallback} deleteCallback\n*/\nconst deleteUser = (userUid, locals, deleteCallback) => {\n  User.findOneAndRemove({ _id: userUid }, deleteCallback);\n};\n\n\n/**\n* Callback for {@link getUserById}\n* @typedef {Object} GetUserCallback\n* @param {Object} - error\n* @param {UserSchemas} - Retrieved user\n*/\n\n/**\n* Retrieves the user.\n* @param {string} userUid - The UID of the user to be updated\n* @param {Object} locals\n* @param {GetUserCallback} queryCallback\n*/\nconst getUserById = (userUid, locals, queryCallback) => {\n  User.findById(userUid, (err, results) => {\n    if (err) {\n      queryCallback(err);\n      return;\n    }\n    const user = {\n      uid: results.id,\n      email: results.email,\n      name: results.name,\n      role: results.role,\n    };\n\n    if (user.role === 'student') {\n      user.points = results.points;\n      user.isApproved = results.isApproved;\n    }\n\n    queryCallback(err, user);\n  });\n};\n\n\nmodule.exports = { createUser, modifyUser, deleteUser, getUserById };\n",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "userModels",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~userModels",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "User",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~User",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "Student",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~Student",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "Admin",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~Admin",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "typedef",
    "name": "CreateUserCallback",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~CreateUserCallback",
    "access": null,
    "description": "Callback for {@link createUser}",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "The error."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user UID."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "CreateUserCallback"
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "createUser",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~createUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": "{createUser}",
    "description": "Given User information, create a User.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The request body data."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data.role",
        "description": "The user role."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data.email",
        "description": "The user email address."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data.password",
        "description": "The user password."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data.name",
        "description": "The user name."
      },
      {
        "nullable": null,
        "types": [
          "CreateUserCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "The callback function to run after this function\n    finishes."
      }
    ]
  },
  {
    "__docId__": 140,
    "kind": "typedef",
    "name": "ModifyUserCallback",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~ModifyUserCallback",
    "access": null,
    "description": "Callback for {@link modifyUser}",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "The error"
      },
      {
        "nullable": null,
        "types": [
          "UserSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "The modified user object"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ModifyUserCallback"
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "modifyUser",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~modifyUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": "{modifyUser}",
    "description": "Updates the user with the passed in values.\nThis method does NOT delete fields",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userUid",
        "description": "The UID of the user to be updated"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reqData",
        "description": "The request data"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ModifyUserCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "modifyCallback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "typedef",
    "name": "DeleteUserCallback",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~DeleteUserCallback",
    "access": null,
    "description": "Callback for {@link deleteUser}",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "error"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DeleteUserCallback"
    }
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "deleteUser",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~deleteUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": "{deleteUser}",
    "description": "Deletes the user from the database.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userUid",
        "description": "The UID of the user to be updated."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "DeleteUserCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "deleteCallback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 144,
    "kind": "typedef",
    "name": "GetUserCallback",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~GetUserCallback",
    "access": null,
    "description": "Callback for {@link getUserById}",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "error"
      },
      {
        "nullable": null,
        "types": [
          "UserSchemas"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "Retrieved user"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "GetUserCallback"
    }
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "getUserById",
    "memberof": "cpceed-webapp/api/users/user-manager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/users/user-manager.js~getUserById",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-manager.js",
    "importStyle": "{getUserById}",
    "description": "Retrieves the user.",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userUid",
        "description": "The UID of the user to be updated"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "locals",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "GetUserCallback"
        ],
        "spread": false,
        "optional": false,
        "name": "queryCallback",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "cpceed-webapp/api/users/user-models.js",
    "content": "const mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\n\nconst Schema = mongoose.Schema;\n\nconst options = { discriminatorKey: 'type' };\nconst pointOption = {\n  type: Number,\n  required: true,\n  default: 0,\n};\n\n/**\n* User Object\n* @typedef {Object} UserSchema\n* @param {string} name - Screen name for user\n* @param {string} firstName - DEPRECATED\n* @param {string} lastName - DEPRECATED\n* @param {string} email\n* @param {string} password\n* @param {string} role - ENUM: student, admin\n* @param {boolean} isApproved\n*/\nconst userSchema = new Schema({\n  name: String,\n  firstName: String,\n  lastName: String,\n  email: {\n    type: String,\n    unique: true,\n    required: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  role: {\n    type: String,\n    enum: ['student', 'admin'],\n    required: true,\n  },\n  isApproved: {\n    type: Boolean,\n    required: true,\n    default: false,\n  },\n}, options);\n\n/**\n*  Updates and saves the user's password\n*/\nuserSchema.pre('save', function pre(next) {\n  const user = this;\n\n  // If the password is not modified, continue saving the user.\n  if (!user.isModified('password')) {\n    next();\n    return;\n  }\n\n  bcrypt.genSalt(Number(process.env.SALT), (saltErr, salt) => {\n    if (saltErr) {\n      next(saltErr);\n      return;\n    }\n\n    bcrypt.hash(user.password, salt, (hashErr, hash) => {\n      user.password = hash;\n      next(hashErr);\n    });\n  });\n});\n\nuserSchema.pre('findOneAndUpdate', function preUpdate(next) {\n  const password = this.getUpdate().$set.password;\n\n  // If the password is not modified, continue saving the user.\n  if (!password) {\n    next();\n    return;\n  }\n\n  bcrypt.genSalt(Number(process.env.SALT), (saltErr, salt) => {\n    if (saltErr) {\n      next(saltErr);\n      return;\n    }\n\n    bcrypt.hash(password, salt, (hashErr, hash) => {\n      /* eslint-disable no-underscore-dangle */\n      this._update.$set.password = hash;\n      /* eslint-enable no-underscore-dangle */\n      next(hashErr);\n    });\n  });\n});\n\n/**\n* Helper method to check users password\n* @param {string} password - The password to be compared to the user's password\n* @returns {Promise<boolean, Error>} - Resolves with a boolean indicating whether\n* or not the password is a match\n*/\nuserSchema.methods.comparePassword = function comparePassword(password) {\n  return bcrypt.compare(password, this.password);\n};\n\nconst studentSchema = new Schema({\n  points: {\n    career: pointOption,\n    community: pointOption,\n    firstother: pointOption,\n    firstworkshops: pointOption,\n    mentor: pointOption,\n    other: pointOption,\n    outreach: pointOption,\n    professor: pointOption,\n    staff: pointOption,\n    misc: pointOption,\n  },\n  studentId: {\n    type: String,\n  },\n}, options);\n\nconst adminSchema = new Schema({}, options);\n\nconst User = mongoose.model('User', userSchema);\n\nconst Student = User.discriminator('student', studentSchema);\nconst Admin = User.discriminator('admin', adminSchema);\n\nmodule.exports = { Student, Admin, User };\n",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "mongoose",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~mongoose",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "bcrypt",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~bcrypt",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "Schema",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~Schema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "options",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~options",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"discriminatorKey\": string}"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "pointOption",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~pointOption",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"type\": *, \"required\": boolean, \"default\": *}"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "typedef",
    "name": "UserSchema",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~UserSchema",
    "access": null,
    "description": "User Object",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Screen name for user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstName",
        "description": "DEPRECATED"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastName",
        "description": "DEPRECATED"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "role",
        "description": "ENUM: student, admin"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isApproved",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "UserSchema"
    }
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "comparePassword",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~comparePassword",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": "Helper method to check users password",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean, Error>} - Resolves with a boolean indicating whether\nor not the password is a match"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password to be compared to the user's password"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean, Error>"
      ],
      "spread": false,
      "description": "Resolves with a boolean indicating whether\nor not the password is a match"
    }
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "studentSchema",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~studentSchema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "Schema"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "adminSchema",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~adminSchema",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "Schema"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "Student",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~Student",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": "{Student}",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "Admin",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~Admin",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": "{Admin}",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "User",
    "memberof": "cpceed-webapp/api/users/user-models.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-models.js~User",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-models.js",
    "importStyle": "{User}",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "cpceed-webapp/api/users/user-router.js",
    "content": "const express = require('express');\nconst userManager = require('api/users/user-manager');\nconst authManager = require('api/auth/auth-manager');\nconst logger = require('common/logger.js');\n\nconst userRouter = express.Router();\n\n/**\n * Route for creating a new user\n * # API\n * - Endpoint: `/api/users`\n * - Verb: POST\n * - Success Code: 201\n *\n * @typedef {function} Route-CreateUser\n * @param {Object} req - Express request object\n * @property {UserSchema} req.body - User to be created\n * @param {Object} res - Express result object\n * @property {string} res.body - UID of the created user if successful, else the\n *                          error message\n * @property {number} res.status - Indicates success or not\n */\nuserRouter.post('/', (req, res) => {\n  userManager.createUser(req.body, (err, uid) => {\n    if (err) {\n      logger.error(err);\n      res.status(400).json(err).end();\n    } else {\n      // A User was created.\n      res.status(201).json({ uid }).end();\n    }\n  });\n});\n\n/**\n * Route for modiying an existing user\n * # API\n * - Endpoint: `/api/users`\n * - Verb: PUT\n * - Success Code: 200\n *\n * @typedef {function} Route-ModifyUser\n * @param {Object} req - Express request object\n * @property {string} [req.query.uid] UID of user to be modified\n * @property {string} req.query.token - Admin | Modified User\n * @property {UserSchema} req.body - Updated fields of the user\n * @param {Object} res - Express result object\n * @property {UserSchema|string} res.body - Modified user | error message\n * @property {number} res.status - 200 on success\n */\nuserRouter.put('/',\n    authManager.verify,\n    authManager.validateUidPermissions,\n    (req, res) => {\n      userManager.modifyUser(res.locals.uid, req.body, res.locals,\n        (err, user) => {\n          if (err) {\n            logger.error(err);\n            res.status(400).json(err).end();\n            return;\n          }\n          res.status(200).json(user).end();\n        });\n    });\n\n/**\n * Route for deleting an existing user\n * # API\n * - Endpoint: `/api/users`\n * - Verb: DELETE\n * - Success Code: 200\n *\n * @typedef {function} Route-DeleteUser\n * @param {Object} req - Express request object\n * @property {string} [req.query.uid] - UID of user to be deleted\n * @property {string} req.query.token - Admin | User to be deleted\n * @param {Object} res - Express result object\n * @property {number} res.status - 200 on success\n */\nuserRouter.delete('/',\n    authManager.verify,\n    authManager.validateUidPermissions,\n    (req, res) => {\n      userManager.deleteUser(res.locals.uid, res.locals, (err, result) => {\n        if (err) {\n          logger.error(err);\n          res.status(400).json(err).end();\n          return;\n        }\n        res.status(200).json(result).end();\n      });\n    });\n\n/**\n * Route for getting an existing user\n * # API\n * - Endpoint: `/api/users`\n * - Verb: GET\n * - Success Code: 200\n *\n * @typedef {function} Route-GetUser\n * @param {Object} req - Express request object\n * @property {string} [req.query.uid] - UID of user to be retrieved\n * @property {string} req.query.token - Admin | User being retrieved\n * @param {Object} res - Express result object\n * @property {number} res.status - 200 on success\n */\nuserRouter.get('/',\n    authManager.verify,\n    authManager.validateUidPermissions,\n    (req, res) => {\n      const uid = res.locals.uid;\n      userManager.getUserById(uid, {}, (err, user) => {\n        if (err) {\n          logger.error(err);\n          res.status(400).send(err).end();\n          return;\n        }\n\n        if (!user) {\n          logger.error('No user found.');\n          res.status(404).end();\n          return;\n        }\n\n        res.status(200).json(user).end();\n      });\n    });\n\nmodule.exports = { userRouter };\n",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "express",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~express",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "userManager",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~userManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "authManager",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~authManager",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "variable",
    "name": "logger",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~logger",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "typedef",
    "name": "Route-CreateUser",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~Route-CreateUser",
    "access": null,
    "description": "Route for creating a new user\n# API\n- Endpoint: `/api/users`\n- Verb: POST\n- Success Code: 201",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "UserSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "User to be created"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "UID of the created user if successful, else the\n                         error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "Indicates success or not"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-CreateUser"
    }
  },
  {
    "__docId__": 165,
    "kind": "typedef",
    "name": "Route-ModifyUser",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~Route-ModifyUser",
    "access": null,
    "description": "Route for modiying an existing user\n# API\n- Endpoint: `/api/users`\n- Verb: PUT\n- Success Code: 200",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "req.query.uid",
        "description": "UID of user to be modified"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin | Modified User"
      },
      {
        "nullable": null,
        "types": [
          "UserSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "Updated fields of the user"
      },
      {
        "nullable": null,
        "types": [
          "UserSchema",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "Modified user | error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-ModifyUser"
    }
  },
  {
    "__docId__": 166,
    "kind": "typedef",
    "name": "Route-DeleteUser",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~Route-DeleteUser",
    "access": null,
    "description": "Route for deleting an existing user\n# API\n- Endpoint: `/api/users`\n- Verb: DELETE\n- Success Code: 200",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "req.query.uid",
        "description": "UID of user to be deleted"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin | User to be deleted"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-DeleteUser"
    }
  },
  {
    "__docId__": 167,
    "kind": "typedef",
    "name": "Route-GetUser",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~Route-GetUser",
    "access": null,
    "description": "Route for getting an existing user\n# API\n- Endpoint: `/api/users`\n- Verb: GET\n- Success Code: 200",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "req.query.uid",
        "description": "UID of user to be retrieved"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query.token",
        "description": "Admin | User being retrieved"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "200 on success"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-GetUser"
    }
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "userRouter",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~userRouter",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/api/users/user-router.js",
    "importStyle": "{userRouter}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "typedef",
    "name": "Route-CreateUser",
    "memberof": "cpceed-webapp/api/users/user-router.js",
    "static": true,
    "longname": "cpceed-webapp/api/users/user-router.js~Route-CreateUser",
    "access": null,
    "description": "Route for creating a new user\n# API\n- Endpoint: `/api/users`\n- Verb: POST\n- Success Code: 201",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express request object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express result object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "UserSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "User to be created"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "res.body",
        "description": "UID of the created user if successful, else the\n                         error message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "res.status",
        "description": "Indicates success or not"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "Route-CreateUser"
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "cpceed-webapp/src/App.jsx",
    "content": "import React from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport GrommetApp from 'grommet/components/App';\nimport Box from 'grommet/components/Box';\n\nimport NavBarContainer from 'components/NavBar/NavBarContainer.jsx';\nimport Events from 'routes/Events';\nimport Activity from 'routes/Activity';\nimport Settings from 'routes/Settings';\nimport store from 'redux/store.js';\n\nconst App = () => (\n  // Provider shares store with components joined by connect()\n  <Provider store={store}>\n    <HashRouter>\n      <GrommetApp\n        centered={false}\n        inline={false}\n      >\n        <Box full>\n          <NavBarContainer />\n\n          {/* Load the events page by default */}\n          <Route\n            exact\n            path='/'\n            render={() => (\n              <Redirect to='/events' />\n            )}\n          />\n\n          {/* Set the children of the primary component */}\n          <Route path='/events' component={Events} />\n          <Route path='/activity' component={Activity} />\n          <Route path='/settings' component={Settings} />\n        </Box>\n      </GrommetApp>\n    </HashRouter>\n  </Provider>\n);\n\nexport default App;\n",
    "static": true,
    "longname": "cpceed-webapp/src/App.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "App",
    "memberof": "cpceed-webapp/src/App.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/App.jsx~App",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/App.jsx",
    "importStyle": "App",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "cpceed-webapp/src/components/Auth/Auth.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layer from 'grommet/components/Layer';\nimport Tabs from 'grommet/components/Tabs';\nimport Tab from 'grommet/components/Tab';\n\nimport logger from 'logger.js';\nimport Login from './Login.jsx';\nimport Register from './Register.jsx';\n\nclass Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n    };\n\n    this.handleTabChange = this.handleTabChange.bind(this);\n  }\n\n  handleTabChange(newIndex) {\n    this.setState({\n      index: newIndex,\n    });\n  }\n\n  render() {\n    return (\n      <Layer\n        closer\n        flush={false}\n        align='center'\n        onClose={() => {\n          this.props.authCancelled();\n        }}\n      >\n        <Tabs\n          activeIndex={this.state.index}\n          justify='center'\n          responsive={false}\n          onActive={(event) => {\n            this.handleTabChange(event);\n          }}\n        >\n          <Tab title='Login'>\n            <Login\n              handleLogin={this.props.handleLogin}\n              logErr={this.props.logErr}\n              waiting={this.props.waiting}\n            />\n          </Tab>\n          <Tab title='Register'>\n            <Register\n              handleRegister={this.props.handleRegister}\n              regErr={this.props.regErr}\n              waiting={this.props.waiting}\n            />\n          </Tab>\n        </Tabs>\n      </Layer>\n    );\n  }\n}\n\nAuth.propTypes = {\n  handleRegister: PropTypes.func,\n  handleLogin: PropTypes.func,\n  authCancelled: PropTypes.func.isRequired,\n  regErr: PropTypes.string,\n  logErr: PropTypes.string,\n  waiting: PropTypes.bool,\n};\n\nAuth.defaultProps = {\n  handleRegister: () => logger.error('handleRegister called without being passed'),\n  handleLogin: () => logger.error('handleLogin called without being passed'),\n  regErr: '',\n  logErr: '',\n  waiting: false,\n};\n\nexport default Auth;\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "class",
    "name": "Auth",
    "memberof": "cpceed-webapp/src/components/Auth/Auth.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/Auth.jsx",
    "importStyle": "Auth",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 174,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth#state",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"index\": *}"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "handleTabChange",
    "memberof": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth#handleTabChange",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "handleTabChange",
    "memberof": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth#handleTabChange",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "newIndex",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Auth.jsx~Auth#render",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "cpceed-webapp/src/components/Auth/AuthContainer.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as server from 'server';\nimport {\n  coordinator,\n  student,\n  AuthStates,\n} from 'redux/actions.js';\nimport logger from 'logger.js';\nimport Auth from './Auth.jsx';\n\nclass AuthContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logErr: '',\n      regErr: '',\n      waiting: false,\n    };\n\n    /*\n      Only functions that are being passed out of this scope, as in the case\n      of passing props to children, need to be bound. This ensures that they\n      can still access the scope of this component even though they are\n      being called from another component.\n    */\n    this.handleRegister = this.handleRegister.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleRegister(data) {\n    this.setState({\n      waiting: true,\n      regErr: '',\n    });\n\n    let userData;\n    switch (data.role) {\n      case AuthStates.COORDINATOR:\n        userData = coordinator;\n        break;\n      case AuthStates.STUDENT:\n        userData = student;\n        break;\n      default:\n        logger.error('Unknown user role in AuthContainer.js');\n    }\n\n    userData.email = data.email;\n    userData.name = data.name;\n\n    server.createUser(data)\n      .then(() => {\n        logger.info('User was registered');\n\n        return server.login(data.email, data.password);\n      })\n      .then(() => {\n        logger.info('User was logged in');\n\n        if (this.props.authFinished) {\n          this.props.authFinished();\n        }\n      })\n      .catch((e) => {\n        logger.error(e.message);\n        this.setState({\n          regErr: e.message,\n          waiting: false,\n        });\n      });\n  }\n\n  handleLogin(email, password) {\n    this.setState({\n      waiting: true,\n      logErr: '',\n    });\n\n    server.login(email, password)\n      .then(() => {\n        logger.info('User was logged in');\n\n        if (this.props.authFinished) {\n          this.props.authFinished();\n        }\n      })\n      .catch((e) => {\n        logger.error(e.message);\n        this.setState({\n          logErr: e.message,\n          waiting: false,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Auth\n        handleRegister={this.handleRegister}\n        handleLogin={this.handleLogin}\n        authCancelled={this.props.authCancelled}\n        regErr={this.state.regErr}\n        logErr={this.state.logErr}\n        waiting={this.state.waiting}\n      />\n    );\n  }\n}\n\nAuthContainer.propTypes = {\n  authFinished: PropTypes.func,\n  authCancelled: PropTypes.func.isRequired,\n};\n\nAuthContainer.defaultProps = {\n  authFinished: null,\n};\n\nexport default AuthContainer;\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "class",
    "name": "AuthContainer",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/AuthContainer.jsx",
    "importStyle": "AuthContainer",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 181,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#state",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"logErr\": *, \"regErr\": *, \"waiting\": *}"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "handleRegister",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#handleRegister",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "handleLogin",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#handleLogin",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "handleRegister",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#handleRegister",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "handleLogin",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#handleLogin",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      },
      {
        "name": "password",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/AuthContainer.jsx~AuthContainer#render",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "cpceed-webapp/src/components/Auth/Login.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from 'grommet/components/Form';\nimport FormField from 'grommet/components/FormField';\nimport Footer from 'grommet/components/Footer';\nimport Button from 'grommet/components/Button';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    // This prevents a '?' from being appended to the URL\n    event.preventDefault();\n    this.props.handleLogin(this.state.email, this.state.password);\n  }\n\n  render() {\n    let errMessage = null;\n    if (this.props.logErr !== '') {\n      errMessage = (\n        <span style={{ color: 'red' }}>{this.props.logErr}</span>\n      );\n    }\n\n    let passHandleSubmit = this.handleSubmit;\n    if (this.props.waiting === true) {\n      passHandleSubmit = null;\n    }\n\n    return (\n      <Form\n        pad='medium'\n        plain={false}\n        onSubmit={this.handleSubmit}\n      >\n        <fieldset>\n          <FormField label='Email'>\n            <input\n              name='email'\n              type='email'\n              value={this.state.email}\n              onChange={this.handleInputChange}\n            />\n          </FormField>\n          <FormField label='Password'>\n            <input\n              name='password'\n              type='password'\n              value={this.state.password}\n              onChange={this.handleInputChange}\n            />\n          </FormField>\n          {errMessage}\n        </fieldset>\n        <Footer size='small'>\n          <Button\n            label='Login'\n            type='submit'\n            primary\n            onClick={passHandleSubmit}\n          />\n        </Footer>\n      </Form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  logErr: PropTypes.string.isRequired,\n  waiting: PropTypes.bool.isRequired,\n};\n\nexport default Login;\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "class",
    "name": "Login",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/Login.jsx",
    "importStyle": "Login",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 190,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#state",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"email\": *, \"password\": *}"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/components/Auth/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Login.jsx~Login#render",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "cpceed-webapp/src/components/Auth/Register.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Form from 'grommet/components/Form';\nimport FormField from 'grommet/components/FormField';\nimport Select from 'grommet/components/Select';\nimport Paragraph from 'grommet/components/Paragraph';\nimport Footer from 'grommet/components/Footer';\nimport Button from 'grommet/components/Button';\n\nimport { AuthStates } from 'redux/actions.js';\nimport logger from 'logger.js';\nimport { checkEmail, checkPass, checkConfirm } from './verify.js';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      confirmPass: '',\n      name: '',\n      role: 'student',\n      err: {\n        emailErr: '',\n        passErr: '',\n        confirmErr: '',\n      },\n    };\n\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.inputChecking = this.inputChecking.bind(this);\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value,\n      confirmPass: '',\n      err: update(this.state.err, {\n        confirmErr: { $set: '' },\n      }),\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSelectChange(event) {\n    const name = event.target.name;\n    const option = event.option;\n\n    this.setState({\n      [name]: option,\n    });\n  }\n\n  handleSubmit(event) {\n    // This prevents a '?' from being appended to the URL\n    event.preventDefault();\n\n    this.props.handleRegister({\n      email: this.state.email,\n      password: this.state.password,\n      name: this.state.name,\n      role: this.state.role,\n    });\n  }\n\n  handleFocus(event) {\n    const name = event.target.name;\n\n    switch (name) {\n      case 'email':\n        if (this.state.err.emailErr !== '') {\n          this.setState({\n            err: update(this.state.err, {\n              emailErr: { $set: '' },\n            }),\n          });\n        }\n\n        break;\n      case 'password':\n        if (this.state.err.passErr !== '') {\n          this.setState({\n            err: update(this.state.err, {\n              passErr: { $set: '' },\n            }),\n          });\n        }\n\n        break;\n      case 'confirmPass':\n        if (this.state.err.confirmErr !== '') {\n          this.setState({\n            err: update(this.state.err, {\n              confirmErr: { $set: '' },\n            }),\n          });\n        }\n\n        break;\n      default:\n        logger.error(`Create an onFocus handler for ${name}`);\n    }\n  }\n\n  inputChecking(event) {\n    const name = event.target.name;\n    let value = null;\n\n    switch (name) {\n      case 'email':\n        value = checkEmail(this.state.email);\n\n        this.setState({\n          err: update(this.state.err, {\n            emailErr: { $set: value },\n          }),\n        });\n\n        break;\n      case 'password':\n        value = checkPass(this.state.password);\n\n        this.setState({\n          err: update(this.state.err, {\n            passErr: { $set: value },\n          }),\n        });\n\n        break;\n      case 'confirmPass':\n        value = checkConfirm(this.state.password, this.state.confirmPass);\n\n        this.setState({\n          err: update(this.state.err, {\n            confirmErr: { $set: value },\n          }),\n        });\n\n        break;\n      default:\n        logger.error(`Create an onBlur handler for ${name}`);\n    }\n  }\n\n  render() {\n    // Turn AuthStates from actions.js into array for Select\n    const authArray = [];\n    Object.keys(AuthStates).forEach((key) => {\n      if (AuthStates[key] !== 'guest') {\n        authArray.push(AuthStates[key]);\n      }\n    });\n\n    let errMessage = null;\n    if (this.props.regErr !== '') {\n      errMessage = (\n        <span style={{ color: 'red' }}>{this.props.regErr}</span>\n      );\n    }\n\n    let passHandleSubmit = this.handleSubmit;\n    Object.keys(this.state.err).forEach((key) => {\n      if (this.state.err[key] !== '') {\n        passHandleSubmit = null;\n      }\n    });\n    if (this.props.waiting === true) {\n      passHandleSubmit = null;\n    }\n\n    return (\n      <Form\n        pad='medium'\n        plain={false}\n        onSubmit={passHandleSubmit}\n      >\n        <fieldset>\n          <FormField label='Role'>\n            <Select\n              name='role'\n              options={authArray}\n              value={this.state.role}\n              onChange={this.handleSelectChange}\n            />\n          </FormField>\n          <FormField\n            label='Email'\n            error={this.state.err.emailErr}\n          >\n            <input\n              name='email'\n              type='email'\n              value={this.state.email}\n              onBlur={this.inputChecking}\n              onFocus={this.handleFocus}\n              onChange={this.handleInputChange}\n            />\n          </FormField>\n          <Paragraph margin='none'>\n            Your password should use at least 8 characters. It should\n            contain only ASCII text, with at least one uppercase, one\n            lowercase, one number, and one special character.\n          </Paragraph>\n          <FormField\n            label='Password'\n            error={this.state.err.passErr}\n          >\n            <input\n              name='password'\n              type='password'\n              value={this.state.password}\n              onBlur={this.inputChecking}\n              onFocus={this.handleFocus}\n              onChange={this.handlePasswordChange}\n            />\n          </FormField>\n          <FormField\n            label='Confirm Password'\n            error={this.state.err.confirmErr}\n          >\n            <input\n              name='confirmPass'\n              type='password'\n              value={this.state.confirmPass}\n              onBlur={this.inputChecking}\n              onFocus={this.handleFocus}\n              onChange={this.handleInputChange}\n            />\n          </FormField>\n          <FormField label='Screen Name'>\n            <input\n              name='name'\n              type='text'\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </FormField>\n          {errMessage}\n        </fieldset>\n        <Footer size='small'>\n          <Button\n            label='Register'\n            type='submit'\n            primary\n            onClick={passHandleSubmit}\n          />\n        </Footer>\n      </Form>\n    );\n  }\n}\n\nRegister.propTypes = {\n  handleRegister: PropTypes.func.isRequired,\n  regErr: PropTypes.string.isRequired,\n  waiting: PropTypes.bool.isRequired,\n};\n\nexport default Register;\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "class",
    "name": "Register",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/Register.jsx",
    "importStyle": "Register",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 199,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#state",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"email\": *, \"password\": *, \"confirmPass\": *, \"name\": *, \"role\": string, \"err\": *}"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "handlePasswordChange",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handlePasswordChange",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "handleSelectChange",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleSelectChange",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "handleFocus",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleFocus",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "inputChecking",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#inputChecking",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "handlePasswordChange",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handlePasswordChange",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "handleSelectChange",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleSelectChange",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "handleFocus",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#handleFocus",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "inputChecking",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#inputChecking",
    "access": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/components/Auth/Register.jsx~Register",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/Auth/Register.jsx~Register#render",
    "access": null,
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "cpceed-webapp/src/components/Auth/RequireAuth.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport AuthContainer from './AuthContainer.jsx';\n\nconst requireAuth = (WrappedComponent, requiredState) => {\n  class AuthWrapper extends WrappedComponent {\n    constructor(props) {\n      super(props);\n\n      this.authCancelled = this.authCancelled.bind(this);\n    }\n\n    authCancelled() {\n      // If signin is cancelled, go back to the previous page\n      this.props.history.goBack();\n    }\n\n    render() {\n      let authorized = true;\n      let output;\n\n      // Checks if user has the required permissions\n      Object.keys(requiredState).forEach((key) => {\n        if (this.props.user.permissions[key] !== requiredState[key]) {\n          authorized = false;\n        }\n      });\n\n      // Depnding on whether the user has the required permissions\n      if (authorized === true) {\n        // Render the component\n        output = super.render();\n      } else {\n        // Display the signin window\n        output = <AuthContainer authCancelled={this.authCancelled} />;\n      }\n\n      return output;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return {\n      user: state.user,\n    };\n  }\n\n  return withRouter(connect(mapStateToProps)(AuthWrapper));\n};\n\nexport default requireAuth;\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/RequireAuth.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "requireAuth",
    "memberof": "cpceed-webapp/src/components/Auth/RequireAuth.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/RequireAuth.jsx~requireAuth",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/RequireAuth.jsx",
    "importStyle": "requireAuth",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "WrappedComponent",
        "types": [
          "*"
        ]
      },
      {
        "name": "requiredState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "cpceed-webapp/src/components/Auth/verify.js",
    "content": "export const checkEmail = (email) => {\n  var output = '';\n\n  if(/@ttu.edu$/.test(email) !== true) {\n    output = 'Please use a TTU email address.';\n  }\n\n  return output;\n}\n\nexport const checkPass = (password) => {\n  var output = '';\n\n  if(/^[\\x00-\\x7F]+$/.test(password) !== true) {\n    // ASCII only\n    output = 'Please use only ASCII characters.';\n  } else if(password.length < 8) {\n    // 8 characters long\n    output = 'Please use at least 8 characters.';\n  } else if(/[A-Z]/.test(password) !== true) {\n    // 1 uppercase\n    output = 'Please use at least one uppercase letter.';\n  } else if(/[a-z]/.test(password) !== true) {\n    // 1 lowercase\n    output = 'Please use at least one lowercase letter.';\n  } else if(/[0-9]/.test(password) !== true) {\n    // 1 number\n    output = 'Please use at least one number.';\n  } else if(/[^A-Za-z0-9]/.test(password) !== true) {\n    // 1 special character\n    output = 'Please use at least one special character.';\n  }\n\n  return output;\n}\n\nexport const checkConfirm = (password, confirm) => {\n  var output = '';\n\n  if(password !== confirm) {\n    output = 'Please enter a matching password.';\n  }\n\n  return output;\n}\n\nexport const checkID = (studentID) => {\n  var output = '';\n\n  if(/^[0-9]{8}$/.test(studentID) !== true) {\n    output = 'Please use 8 numbers.';\n  }\n\n  return output;\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/verify.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "checkEmail",
    "memberof": "cpceed-webapp/src/components/Auth/verify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/verify.js~checkEmail",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/verify.js",
    "importStyle": "{checkEmail}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "checkPass",
    "memberof": "cpceed-webapp/src/components/Auth/verify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/verify.js~checkPass",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/verify.js",
    "importStyle": "{checkPass}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "checkConfirm",
    "memberof": "cpceed-webapp/src/components/Auth/verify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/verify.js~checkConfirm",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/verify.js",
    "importStyle": "{checkConfirm}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "confirm",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "checkID",
    "memberof": "cpceed-webapp/src/components/Auth/verify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/Auth/verify.js~checkID",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/Auth/verify.js",
    "importStyle": "{checkID}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "studentID",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "cpceed-webapp/src/components/NavBar/NavBar.css",
    "content": "/*\n  When using css modules, `url()` references local files with `./` and\n  files in `node_modules` with just the name of the file.\n*/\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/NavBar/NavBar.css",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "cpceed-webapp/src/components/NavBar/NavBar.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from 'grommet/components/Header';\nimport Button from 'grommet/components/Button';\nimport Title from 'grommet/components/Title';\nimport Box from 'grommet/components/Box';\nimport Menu from 'grommet/components/Menu';\nimport MenuIcon from 'grommet/components/icons/base/Menu';\nimport UserIcon from 'grommet/components/icons/base/User';\nimport Anchor from 'grommet/components/Anchor';\n\nimport { AuthStates } from 'redux/actions.js';\nimport AuthContainer from 'components/Auth/AuthContainer.jsx';\n\nfunction NavBar(props) {\n  let authView = null;\n  if (props.auth === true) {\n    authView = (\n      <AuthContainer\n        authFinished={props.toggleAuth}\n        authCancelled={props.toggleAuth}\n      />\n    );\n  }\n\n  let authButton = null;\n  if (props.user.role === AuthStates.GUEST) {\n    authButton = (\n      <Button\n        label='Sign In'\n        primary\n        onClick={props.toggleAuth}\n      />\n    );\n  } else {\n    authButton = (\n      <Menu\n        dropAlign={{ right: 'right', top: 'top' }}\n        icon={\n          <Box\n            flex\n            direction='row'\n            responsive={false}\n          >\n            <UserIcon />\n          </Box>\n        }\n      >\n        <Anchor disabled>\n          {props.user.name}\n        </Anchor>\n        <Anchor onClick={() => props.navigate('settings/')}>\n          Settings\n        </Anchor>\n        <Anchor onClick={() => props.logout()}>\n          Logout\n        </Anchor>\n      </Menu>\n    );\n  }\n\n  return (\n    <div>\n      <Header\n        fixed\n        flex\n        direction='row'\n        responsive={false}\n        pad={{ horizontal: 'small' }}\n      >\n        <Menu\n          icon={<MenuIcon />}\n          dropAlign={{ left: 'left', top: 'top' }}\n        >\n          <Anchor onClick={() => props.navigate('/')}>\n            Events\n          </Anchor>\n          <Anchor\n            onClick={() => props.navigate('/activity')}\n          >\n            Activity\n          </Anchor>\n        </Menu>\n        <Title>\n          CPCEED\n        </Title>\n        <Box\n          flex\n          justify='end'\n          direction='row'\n          responsive={false}\n          pad='small'\n        >\n          {authButton}\n        </Box>\n      </Header>\n      {authView}\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  auth: PropTypes.bool.isRequired,\n  toggleAuth: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    role: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  }).isRequired,\n  navigate: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nNavBar.defaultProps = {\n  user: {\n    name: '',\n  },\n};\n\nexport default NavBar;\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/NavBar/NavBar.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "NavBar",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/NavBar/NavBar.jsx~NavBar",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/NavBar/NavBar.jsx",
    "importStyle": "NavBar",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as server from 'server';\nimport logger from 'logger.js';\nimport NavBar from './NavBar.jsx';\n\nclass NavBarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: false,\n    };\n\n    /*\n      navigate needs to be bound to the context of NavBarContainer to\n      access the router, since it is being called from NavBar.js.\n    */\n    this.navigate = this.navigate.bind(this);\n    this.logout = this.logout.bind(this);\n    this.toggleAuth = this.toggleAuth.bind(this);\n  }\n\n  toggleAuth() {\n    this.setState({\n      auth: !this.state.auth,\n    });\n  }\n\n  /*\n    Navigates by pushing the relative URL to the router.\n\n    navigate needs to be wrapped in an arrow function before being passed\n    to onClick because it has a custom parameter. onClick only passes an\n    event, so it won't know how to supply other parameters. But you can't\n    add parentheses to navigate because that would call it rather than\n    passing it as a variable. Arrow functions allow navigate to have\n    parentheses because they wrap it in a variable, so the function call\n    doesn't happen until the variable is called as a function.\n  */\n  navigate(url) {\n    this.props.history.push(url);\n  }\n\n  logout() {\n    server.logout()\n      .then(() => {\n        logger.info('User was logged out');\n      })\n      .catch((e) => {\n        logger.error(e.message);\n      });\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      /*\n        As a presenter, NavBar.js isn't allowed to modify data; this\n        includes the router. To maintain the paradigm, the navigate\n        function is passed to NavBar.js as a prop. When it is called\n        from NavBar.js, the context switches back to NavBarContainer.js.\n      */\n      <NavBar\n        toggleAuth={this.toggleAuth}\n        auth={this.state.auth}\n        user={this.props.user}\n        navigate={this.navigate}\n        logout={this.logout}\n      />\n    );\n  }\n}\n\nNavBarContainer.propTypes = {\n  user: PropTypes.shape({}).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\n// Used by connect to map user to this.props.user\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(NavBarContainer));\n",
    "static": true,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "class",
    "name": "NavBarContainer",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/NavBar/NavBarContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 226,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#state",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"auth\": *}"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "navigate",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#navigate",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "logout",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#logout",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "member",
    "name": "toggleAuth",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#toggleAuth",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "toggleAuth",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#toggleAuth",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "navigate",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#navigate",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "logout",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#logout",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~NavBarContainer#render",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/components/NavBar/NavBarContainer.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/components/NavBar/NavBarContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"user\": *}"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "cpceed-webapp/src/index.jsx",
    "content": "import React from 'react';\nimport { render } from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\n\n// Ensures that Grommet styles are applied to the entire app\nimport 'styles/grommet.scss';\nimport App from './App.jsx';\n\nrender(\n  <AppContainer>\n    <App />\n  </AppContainer>,\n  document.getElementById('app'),\n);\n\nif (module.hot) {\n  module.hot.accept('./App.jsx', () => {\n    const NextApp = require('./App.jsx').default;\n    render(\n      <AppContainer>\n        <NextApp />\n      </AppContainer>,\n      document.getElementById('app'),\n    );\n  });\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/index.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "cpceed-webapp/src/redux/actions.js",
    "content": "// action types\n\nexport const UserActionTypes = {\n  UPDATE: 'UPDATE',\n  LOGOUT: 'LOGOUT',\n};\n\n// Register.js uses AuthStates to set the database values for role.\nexport const AuthStates = {\n  GUEST: 'guest',\n  STUDENT: 'student',\n  COORDINATOR: 'admin',\n};\n\n/*\n  This defines permissions for each user type. If you need to define new\n  permissions, you must add them as a comma separated key-value pair to\n  each of the user types in PermissionStates.\n*/\nexport const PermissionStates = {\n  GUEST: {\n    viewActivity: false,\n    viewSettings: false,\n  },\n  STUDENT: {\n    viewActivity: true,\n    viewSettings: true,\n  },\n  COORDINATOR: {\n    viewActivity: true,\n    viewSettings: true,\n  },\n};\n\nexport const coordinator = {\n  email: '',\n  name: '',\n  role: AuthStates.COORDINATOR,\n};\n\nexport const student = {\n  email: '',\n  isApproved: false,\n  name: '',\n  points: {\n    career: 0,\n    community: 0,\n    firstother: 0,\n    firstworkshops: 0,\n    mentor: 0,\n    other: 0,\n    outreach: 0,\n    professor: 0,\n    staff: 0,\n    misc: 0,\n  },\n  role: AuthStates.STUDENT,\n  uid: '',\n};\n\nexport const guest = {\n  role: AuthStates.GUEST,\n};\n\n// action creators\n\nexport function updateUser(user) {\n  return {\n    type: UserActionTypes.UPDATE,\n    user,\n  };\n}\n\nexport function logoutUser() {\n  const user = guest;\n\n  return {\n    type: UserActionTypes.LOGOUT,\n    user,\n  };\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "UserActionTypes",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~UserActionTypes",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{UserActionTypes}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"UPDATE\": string, \"LOGOUT\": string}"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "AuthStates",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~AuthStates",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{AuthStates}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"GUEST\": string, \"STUDENT\": string, \"COORDINATOR\": string}"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "variable",
    "name": "PermissionStates",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~PermissionStates",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{PermissionStates}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"GUEST\": *, \"STUDENT\": *, \"COORDINATOR\": *}"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "variable",
    "name": "coordinator",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~coordinator",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{coordinator}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"email\": *, \"name\": *, \"role\": *}"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "student",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~student",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{student}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"email\": *, \"isApproved\": *, \"name\": *, \"points\": *, \"role\": *, \"uid\": *}"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "name": "guest",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~guest",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{guest}",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"role\": *}"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "updateUser",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~updateUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{updateUser}",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"user\": *}"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "logoutUser",
    "memberof": "cpceed-webapp/src/redux/actions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/redux/actions.js~logoutUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/actions.js",
    "importStyle": "{logoutUser}",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "{\"type\": *, \"user\": *}"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "cpceed-webapp/src/redux/reducers.js",
    "content": "import update from 'immutability-helper';\n\nimport logger from 'logger.js';\nimport {\n  AuthStates,\n  PermissionStates,\n  UserActionTypes,\n  guest\n} from './actions.js';\n\nconst user = (state = guest, action) => {\n  switch(action.type) {\n    case UserActionTypes.UPDATE:\n      var user = action.user;\n\n      switch(user.role) {\n        case AuthStates.GUEST:\n          user.permissions = PermissionStates.GUEST;\n          break;\n        case AuthStates.STUDENT:\n          user.permissions = PermissionStates.STUDENT;\n          break;\n        case AuthStates.COORDINATOR:\n          user.permissions = PermissionStates.COORDINATOR;\n          break;\n        default:\n          logger.error(`Unknown user role ${user.role} in reducers.js`);\n      };\n\n      return update(state, {$set: user});\n    case UserActionTypes.LOGOUT:\n      var user = action.user;\n\n      user.permissions = PermissionStates.GUEST;\n\n      return update(state, {$set: user});\n    default:\n      state.permissions = PermissionStates.GUEST\n\n      return state;\n  };\n}\n\nconst cpceedApp = (state = {}, action) => {\n  return {\n    user: user(state.user, action)\n  };\n}\n\nexport default cpceedApp;\n",
    "static": true,
    "longname": "cpceed-webapp/src/redux/reducers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "user",
    "memberof": "cpceed-webapp/src/redux/reducers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/redux/reducers.js~user",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/reducers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "guest",
        "defaultValue": "guest"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "cpceedApp",
    "memberof": "cpceed-webapp/src/redux/reducers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/redux/reducers.js~cpceedApp",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/reducers.js",
    "importStyle": "cpceedApp",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"user\": *}"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "cpceed-webapp/src/redux/store.js",
    "content": "import { createStore } from 'redux';\n\nimport cpceedApp from 'redux/reducers.js';\n\n// store holds the redux store that allows app-wide state to be shared\nconst store = createStore(cpceedApp);\n\nexport default store;\n",
    "static": true,
    "longname": "cpceed-webapp/src/redux/store.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "name": "store",
    "memberof": "cpceed-webapp/src/redux/store.js",
    "static": true,
    "longname": "cpceed-webapp/src/redux/store.js~store",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/redux/store.js",
    "importStyle": "store",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Activity/components/Activity.jsx",
    "content": "import React from 'react';\n\nimport RequireAuth from 'components/Auth/RequireAuth.jsx';\n\nclass Activity extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>Activity</h2>\n      </div>\n    );\n  }\n}\n\n/*\n  Defining the permissions required to access this component. This is a\n  JavaScript object, so it consists of comma separated key-value pairs.\n  The permissions defined here must already be defined in\n  `src/redux/actions.js`. But you do not have to use all permissions\n  defined in `actions.js`, just a subset that fits your situation.\n*/\nconst requiredState = {\n  viewActivity: true,\n};\n\n// The permissions object is passed as the second argument to RequireAuth\nexport default RequireAuth(Activity, requiredState);\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Activity/components/Activity.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "class",
    "name": "Activity",
    "memberof": "cpceed-webapp/src/routes/Activity/components/Activity.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Activity/components/Activity.jsx~Activity",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Activity/components/Activity.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Activity/components/Activity.jsx~Activity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Activity/components/Activity.jsx~Activity#render",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "requiredState",
    "memberof": "cpceed-webapp/src/routes/Activity/components/Activity.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Activity/components/Activity.jsx~requiredState",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Activity/components/Activity.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"viewActivity\": boolean}"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Activity/index.js",
    "content": "export { default } from './components/Activity.jsx';\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Activity/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Events/components/Events.js",
    "content": "import React from 'react';\n\nclass Events extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>Events</h2>\n      </div>\n    );\n  }\n}\n\nexport default Events;\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Events/components/Events.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "class",
    "name": "Events",
    "memberof": "cpceed-webapp/src/routes/Events/components/Events.js",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Events/components/Events.js~Events",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Events/components/Events.js",
    "importStyle": "Events",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Events/components/Events.js~Events",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Events/components/Events.js~Events#render",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Events/index.js",
    "content": "export { default } from './components/Events.js';\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Events/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/components/Settings.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport Box from 'grommet/components/Box';\nimport Header from 'grommet/components/Header';\nimport Button from 'grommet/components/Button';\n\nimport RequireAuth from 'components/Auth/RequireAuth.jsx';\nimport AccountContainer from '../routes/Account';\nimport ProfileContainer from '../routes/Profile';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n    };\n\n    this.navigate = this.navigate.bind(this);\n  }\n\n  navigate(url) {\n    this.props.history.push(url);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Header\n          fixed={false}\n          size='medium'\n          justify='center'\n          flex\n          direction='row'\n          responsive={false}\n          pad={{ between: 'small' }}\n        >\n          <Button\n            label='Profile'\n            primary={false}\n            onClick={() => {\n              this.navigate('/settings/profile');\n            }}\n          />\n          <Button\n            label='Account'\n            primary={false}\n            onClick={() => {\n              this.navigate('/settings/account');\n            }}\n          />\n        </Header>\n\n        <Route\n          exact\n          path='/settings'\n          render={() => (\n            <Redirect to='/settings/profile' />\n          )}\n        />\n\n        <Route path='/settings/profile' component={AccountContainer} />\n        <Route path='/settings/account' component={ProfileContainer} />\n      </Box>\n    );\n  }\n}\n\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst requiredState = {\n  viewSettings: true,\n};\n\n/*\n  Testing components wrapped in HOCs is slightly more complicated than\n  normal. Since each component is tested in a vacuum the HOC won't work\n  properly. So you have to have a pure export for testing purposes.\n*/\nexport { Settings };\n// The permissions object is passed as the second argument to RequireAuth\nexport default RequireAuth(Settings, requiredState);\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "requiredState",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~requiredState",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/components/Settings.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"viewSettings\": boolean}"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "class",
    "name": "Settings",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/components/Settings.jsx",
    "importStyle": "{Settings}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 263,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings#constructor",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings#state",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"index\": *}"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "navigate",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings#navigate",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "navigate",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings#navigate",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/components/Settings.jsx~Settings#render",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/index.js",
    "content": "export { default } from \"./components/Settings.jsx\";\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Box from 'grommet/components/Box';\nimport Form from 'grommet/components/Form';\nimport Heading from 'grommet/components/Heading';\nimport FormField from 'grommet/components/FormField';\nimport Paragraph from 'grommet/components/Paragraph';\nimport Footer from 'grommet/components/Footer';\nimport Button from 'grommet/components/Button';\n\nimport {\n  checkPass,\n  checkConfirm,\n  checkEmail,\n} from 'components/Auth/verify.js';\nimport logger from 'logger.js';\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      confirm: '',\n      old: '',\n      email: this.props.user.email,\n      err: {\n        password: '',\n        confirm: '',\n        email: '',\n      },\n    };\n\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.inputChecking = this.inputChecking.bind(this);\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value,\n      confirm: '',\n      err: update(this.state.err, {\n        confirm: { $set: '' },\n      }),\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handlePassword(event) {\n    // This prevents a '?' from being appended to the URL\n    event.preventDefault();\n    this.props.handlePassword(this.state.password, this.state.old);\n  }\n\n  handleEmail(event) {\n    event.preventDefault();\n    this.props.handleEmail(this.state.email);\n  }\n\n  handleFocus(event) {\n    const name = event.target.name;\n\n    switch (name) {\n      case 'password':\n        if (this.state.err.password !== '') {\n          this.setState({\n            err: update(this.state.err, {\n              password: { $set: '' },\n            }),\n          });\n        }\n\n        break;\n      case 'confirm':\n        if (this.state.err.confirm !== '') {\n          this.setState({\n            err: update(this.state.err, {\n              confirm: { $set: '' },\n            }),\n          });\n        }\n\n        break;\n      case 'email':\n        if (this.state.err.email !== '') {\n          this.setState({\n            err: update(this.state.err, {\n              email: { $set: '' },\n            }),\n          });\n        }\n\n        break;\n      default:\n        logger.error(`Create an onFocus handler in Account.js for ${name}`);\n    }\n  }\n\n  inputChecking(event) {\n    const name = event.target.name;\n    let value = null;\n\n    switch (name) {\n      case 'password':\n        value = checkPass(this.state.password);\n\n        this.setState({\n          err: update(this.state.err, {\n            password: { $set: value },\n          }),\n        });\n\n        break;\n      case 'confirm':\n        value = checkConfirm(this.state.password, this.state.confirm);\n\n        this.setState({\n          err: update(this.state.err, {\n            confirm: { $set: value },\n          }),\n        });\n\n        break;\n      case 'email':\n        value = checkEmail(this.state.email);\n\n        this.setState({\n          err: update(this.state.err, {\n            email: { $set: value },\n          }),\n        });\n\n        break;\n      default:\n        logger.error(`Create an onBlur handler in Account.js for ${name}`);\n    }\n  }\n\n  render() {\n    // Password conditional rendering\n\n    let passwordMessage = null;\n    if (this.props.err.password !== '') {\n      passwordMessage = (\n        <span style={{ color: 'red' }}>{this.props.err.password}</span>\n      );\n    }\n\n    let passPassword = this.handlePassword;\n    if (this.state.err.password !== '') {\n      passPassword = null;\n    } else if (this.state.err.confirm !== '') {\n      passPassword = null;\n    } else if (this.props.waiting.password === true) {\n      passPassword = null;\n    }\n\n    // Email conditional rendering\n\n    let emailMessage = null;\n    if (this.props.err.email !== '') {\n      emailMessage = (\n        <span style={{ color: 'red' }}>{this.props.err.email}</span>\n      );\n    }\n\n    let passEmail = this.handleEmail;\n    if (this.state.err.email !== '') {\n      passEmail = null;\n    } else if (this.props.waiting.email === true) {\n      passEmail = null;\n    }\n\n    return (\n      <Box\n        flex\n        align='center'\n        size={{ width: 'full' }}\n      >\n        <Heading tag='h2'>\n          Change Password\n        </Heading>\n        <Form\n          pad='medium'\n          plain={false}\n          onSubmit={passPassword}\n        >\n          <fieldset>\n            <Paragraph margin='none'>\n              Your password should use at least 8 characters. It should\n              contain only ASCII text, with at least one uppercase, one\n              lowercase, one number, and one special character.\n            </Paragraph>\n            <FormField\n              label='Password'\n              error={this.state.err.password}\n            >\n              <input\n                name='password'\n                type='password'\n                value={this.state.password}\n                onBlur={this.inputChecking}\n                onFocus={this.handleFocus}\n                onChange={this.handlePasswordChange}\n              />\n            </FormField>\n            <FormField\n              label='Confirm Password'\n              error={this.state.err.confirm}\n            >\n              <input\n                name='confirm'\n                type='password'\n                value={this.state.confirm}\n                onBlur={this.inputChecking}\n                onFocus={this.handleFocus}\n                onChange={this.handleInputChange}\n              />\n            </FormField>\n            <FormField label='Old Password'>\n              <input\n                name='old'\n                type='password'\n                value={this.state.old}\n                onChange={this.handleInputChange}\n              />\n            </FormField>\n            {passwordMessage}\n          </fieldset>\n          <Footer size='small'>\n            <Button\n              label='Change Password'\n              type='submit'\n              primary\n              onClick={passPassword}\n            />\n          </Footer>\n        </Form>\n        <Heading tag='h2'>\n          Change Email\n        </Heading>\n        <Form\n          pad='medium'\n          plain={false}\n          onSubmit={passEmail}\n        >\n          <fieldset>\n            <Paragraph margin='none'>\n              You use your email to login, so make sure to use your new one\n              on your next visit.\n            </Paragraph>\n            <FormField\n              label='Email'\n              error={this.state.err.email}\n            >\n              <input\n                name='email'\n                type='email'\n                value={this.state.email}\n                onBlur={this.inputChecking}\n                onFocus={this.handleFocus}\n                onChange={this.handleInputChange}\n              />\n            </FormField>\n            {emailMessage}\n          </fieldset>\n          <Footer size='small'>\n            <Button\n              label='Change Email'\n              type='submit'\n              primary\n              onClick={passEmail}\n            />\n          </Footer>\n        </Form>\n      </Box>\n    );\n  }\n}\n\nAccount.propTypes = {\n  handlePassword: PropTypes.func.isRequired,\n  handleEmail: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n  err: PropTypes.shape({\n    password: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n  waiting: PropTypes.shape({\n    password: PropTypes.bool.isRequired,\n    email: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default Account;\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "Account",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx",
    "importStyle": "Account",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 271,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#constructor",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#state",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"password\": *, \"confirm\": *, \"old\": *, \"email\": *, \"err\": *}"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "name": "handlePasswordChange",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handlePasswordChange",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "member",
    "name": "handlePassword",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handlePassword",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "member",
    "name": "handleEmail",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handleEmail",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "handleFocus",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handleFocus",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "inputChecking",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#inputChecking",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "handlePasswordChange",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handlePasswordChange",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "handlePassword",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handlePassword",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "handleEmail",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handleEmail",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "handleFocus",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#handleFocus",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "inputChecking",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#inputChecking",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/Account.jsx~Account#render",
    "access": null,
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "content": "import React from 'react';\nimport * as firebase from 'firebase';\nimport {connect} from 'react-redux';\nimport update from 'immutability-helper';\n\nimport Account from './Account.jsx';\nimport {updateUser} from 'redux/actions.js';\nimport logger from 'logger.js';\n\nclass AccountContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      err: {\n        email: '',\n        password: ''\n      },\n      waiting: {\n        email: false,\n        password: false\n      }\n    };\n\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n  }\n\n  handlePassword(password, old) {\n    // TODO (Nils) utilize the old password\n\n    this.setState({\n      waiting: update(this.state.waiting, {\n        password: {$set: true}\n      }),\n      err: update(this.state.err, {\n        password: {$set: ''}\n      })\n    });\n\n    var user = firebase.auth().currentUser;\n    user.updatePassword(password)\n      .then(() => {\n        logger.info('Password was changed');\n        this.setState({\n          waiting: update(this.state.waiting, {\n            password: {$set: false}\n          })\n        });\n      })\n      .catch((e) => {\n        logger.error(e.message);\n        this.setState({\n          waiting: update(this.state.waiting, {\n            password: {$set: false}\n          }),\n          err: update(this.state.err, {\n            password: {$set: e.message}\n          })\n        });\n      });\n  }\n\n  handleEmail(email) {\n    this.setState({\n      waiting: update(this.state.waiting, {\n        email: {$set: true}\n      }),\n      err: update(this.state.err, {\n        email: {$set: ''}\n      })\n    });\n\n    var user = firebase.auth().currentUser;\n    const userRef = firebase.database().ref().child('users/' + user.uid);\n\n    user.updateEmail(email)\n      .then(() => {\n        return userRef.update({\n          email: email\n        });\n      })\n      .then(() => {\n        logger.info('Email was updated');\n\n        var newUser = this.props.user;\n        newUser.email = email;\n        this.props.dispatch(updateUser(newUser));\n\n        this.setState({\n          waiting: update(this.state.waiting, {\n            email: {$set: false}\n          })\n        });\n      })\n      .catch((e) => {\n        logger.error(e.message);\n        this.setState({\n          waiting: update(this.state.waiting, {\n            email: {$set: false}\n          }),\n          err: update(this.state.err, {\n            email: {$set: e.message}\n          })\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Account\n        handlePassword={this.handlePassword}\n        handleEmail={this.handleEmail}\n        user={this.props.user}\n        waiting={this.state.waiting}\n        err={this.state.err}/>\n    );\n  }\n}\n\nconst getUser = (user) => {\n  return user;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: getUser(state.user)\n  }\n}\n\nexport default connect(mapStateToProps)(AccountContainer);\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "class",
    "name": "AccountContainer",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 288,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#state",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"err\": *, \"waiting\": *}"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "handlePassword",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#handlePassword",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "handleEmail",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#handleEmail",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "handlePassword",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#handlePassword",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "old",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "handleEmail",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#handleEmail",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "email",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~AccountContainer#render",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "getUser",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~getUser",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Account/components/AccountContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"user\": *}"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/routes/Account/index.js",
    "content": "export { default } from \"./components/AccountContainer.jsx\";\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Account/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from 'grommet/components/Box';\nimport Heading from 'grommet/components/Heading';\nimport Form from 'grommet/components/Form';\nimport FormField from 'grommet/components/FormField';\nimport Footer from 'grommet/components/Footer';\nimport Button from 'grommet/components/Button';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    // This prevents a '?' from being appended to the URL\n    event.preventDefault();\n\n    if (this.props.name !== this.state.name) {\n      this.props.handleSubmit({\n        name: this.state.name,\n      });\n    }\n  }\n\n  render() {\n    let errMessage = null;\n    if (this.props.proErr !== '') {\n      errMessage = (\n        <span style={{ color: 'red' }}>{this.props.proErr}</span>\n      );\n    }\n\n    let passHandleSubmit = this.handleSubmit;\n    if (this.props.waiting === true) {\n      passHandleSubmit = null;\n    }\n\n    return (\n      <Box\n        flex\n        align='center'\n        size={{ width: 'full' }}\n      >\n        <Heading tag='h2'>\n          Personal Information\n        </Heading>\n        <Form\n          pad='medium'\n          plain={false}\n          onSubmit={passHandleSubmit}\n        >\n          <fieldset>\n            <FormField label='Screen Name'>\n              <input\n                name='name'\n                type='text'\n                value={this.state.name}\n                onChange={this.handleInputChange}\n              />\n            </FormField>\n            {errMessage}\n          </fieldset>\n          <Footer size='small'>\n            <Button\n              label='Change Information'\n              type='submit'\n              primary\n              onClick={passHandleSubmit}\n            />\n          </Footer>\n        </Form>\n      </Box>\n    );\n  }\n}\n\nProfile.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  proErr: PropTypes.string.isRequired,\n  waiting: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "class",
    "name": "Profile",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx",
    "importStyle": "Profile",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 300,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#state",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"name\": *}"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "handleInputChange",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#handleInputChange",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/Profile.jsx~Profile#render",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx",
    "content": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as server from 'server';\nimport { updateUser } from 'redux/actions.js';\nimport logger from 'logger.js';\nimport Profile from './Profile.jsx';\n\nclass ProfileContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proErr: '',\n      waiting: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      waiting: true,\n      proErr: '',\n    });\n\n    server.modifyUser(data, this.props.user.uid)\n      .then((newUser) => {\n        logger.info('User data was updated');\n\n        // Update user in the redux store\n        this.props.dispatch(updateUser(newUser));\n\n        this.setState({\n          waiting: false,\n        });\n      })\n      .catch((e) => {\n        logger.error(e.message);\n        this.setState({\n          waiting: false,\n          proErr: e.message,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Profile\n        name={this.props.user.name}\n        proErr={this.state.proErr}\n        waiting={this.state.waiting}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nProfileContainer.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    uid: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(ProfileContainer);\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "class",
    "name": "ProfileContainer",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 309,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "state",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer#state",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"proErr\": *, \"waiting\": *}"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer",
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "handleSubmit",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer#handleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "render",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~ProfileContainer#render",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/routes/Settings/routes/Profile/components/ProfileContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"user\": *}"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "file",
    "name": "cpceed-webapp/src/routes/Settings/routes/Profile/index.js",
    "content": "export { default } from \"./components/ProfileContainer.jsx\";\n",
    "static": true,
    "longname": "cpceed-webapp/src/routes/Settings/routes/Profile/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "cpceed-webapp/src/server/core/connection.js",
    "content": "import axios from 'axios';\nimport logger from 'logger.js';\n\nif (ENV === 'dev') {\n  // Ensures session cookie is stored and sent with requests during dev\n  axios.defaults.withCredentials = true;\n}\n\n/**\n * The connection information for the server hosting the API.\n *\n * @param {string} baseURL - Base URL including the /api endpoint\n * @param {number} timeout - Time in ms that each call should take\n */\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:3000/api', // TODO(asclines): Move this to env\n  timeout: 5000,\n});\n\ninstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\n/**\n * Promise callback for when API call finishes\n *\n * @typedef {function} OnApiCallFinished\n * @param {Object} - Response from API\n * @param {number} - Response status code\n */\n\n/**\n * Handles errors from API and logs them\n *\n * @param {Object} err - The error object recieved from Axios\n * @param {OnApiCallFinished} onError - Called with the correct error object\n */\nconst errorHandler = (err, onError) => {\n  if (err.response) {\n        // Server responded with a status code outside 2xx range.\n    logger.error(err.response, 'Response error');\n  } else if (err.request) {\n        // No response recieved\n    logger.error(err.request, 'No response recieved');\n  } else {\n        // Who knows\n    logger.error(err.message, 'Request error');\n  }\n  onError(err);\n};\n\n/**\n * This class allows for easy building of a request to the API.\n *\n * @example\n * new Connection()\n *  .post()\n *  .users()\n *  .data(newUser)\n *  .call(() => {\n *    console.log('Connection succeeded!');\n *   }, () => {\n *    console.log('Connection failed!');\n *   });\n */\nexport default class Connection {\n\n  constructor() {\n    this.config = {\n      data: {},\n      params: {},\n    };\n\n    this.status = 0;\n\n    this.url = '/';\n    this.method = 'get';\n  }\n\n  responseHandler(response, onSuccess) {\n    onSuccess(response.data);\n    this.response = response;\n  }\n\n  setMethod(method) {\n    this.method = method;\n    return this;\n  }\n\n  setUrl(url) {\n    this.url = url;\n    return this;\n  }\n\n  post() { return this.setMethod('post'); }\n\n  del() { return this.setMethod('delete'); }\n\n  put() { return this.setMethod('put'); }\n\n  get() { return this.setMethod('get'); }\n\n  users() { return this.setUrl('/users'); }\n\n  auth() { return this.setUrl('/auth'); }\n\n  events() { return this.setUrl('/events'); }\n\n  reports() { return this.setUrl('/reports'); }\n\n  /**\n   * Helper method to add `/all` to endpoint.\n   * @returns {*}\n   */\n  all() {\n    this.endpoint = 'all';\n    return this;\n  }\n\n  /**\n   * Sets the body of the request object\n   *\n   * @param {Object} body\n   * @returns {Connection}\n   */\n  data(body) {\n    Object.keys(body).forEach((key) => {\n      this.config.data[key] = body[key];\n    });\n    return this;\n  }\n\n  /**\n   * Sets the query parameters of the request object\n   *\n   * @param query\n   * @returns {Connection}\n   */\n  params(query) {\n    Object.keys(query).forEach((key) => {\n      this.config.params[key] = query[key];\n    });\n    return this;\n  }\n\n  call(onSuccess, onError) {\n    this.config.method = this.method;\n    if (this.endpoint) {\n      this.config.url = `${this.url}/${this.endpoint}`;\n    } else {\n      this.config.url = this.url;\n    }\n\n    instance(this.config).then((res) => {\n      this.responseHandler(res, onSuccess);\n    }).catch((err) => {\n      errorHandler(err, onError);\n    });\n  }\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/core/connection.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "instance",
    "memberof": "cpceed-webapp/src/server/core/connection.js",
    "static": true,
    "longname": "cpceed-webapp/src/server/core/connection.js~instance",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/core/connection.js",
    "importStyle": null,
    "description": "The connection information for the server hosting the API.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseURL",
        "description": "Base URL including the /api endpoint"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeout",
        "description": "Time in ms that each call should take"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "typedef",
    "name": "OnApiCallFinished",
    "memberof": "cpceed-webapp/src/server/core/connection.js",
    "static": true,
    "longname": "cpceed-webapp/src/server/core/connection.js~OnApiCallFinished",
    "access": null,
    "description": "Promise callback for when API call finishes",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "Response from API"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "Response status code"
      }
    ],
    "type": {
      "types": [
        "function"
      ],
      "optional": false,
      "name": "OnApiCallFinished"
    }
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "errorHandler",
    "memberof": "cpceed-webapp/src/server/core/connection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/core/connection.js~errorHandler",
    "access": null,
    "export": false,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/core/connection.js",
    "importStyle": null,
    "description": "Handles errors from API and logs them",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "The error object recieved from Axios"
      },
      {
        "nullable": null,
        "types": [
          "OnApiCallFinished"
        ],
        "spread": false,
        "optional": false,
        "name": "onError",
        "description": "Called with the correct error object"
      }
    ]
  },
  {
    "__docId__": 320,
    "kind": "class",
    "name": "Connection",
    "memberof": "cpceed-webapp/src/server/core/connection.js",
    "static": true,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/core/connection.js",
    "importStyle": "Connection",
    "description": "This class allows for easy building of a request to the API.",
    "examples": [
      "new Connection()\n .post()\n .users()\n .data(newUser)\n .call(() => {\n   console.log('Connection succeeded!');\n  }, () => {\n   console.log('Connection failed!');\n  });"
    ],
    "lineNumber": 64,
    "interface": false
  },
  {
    "__docId__": 321,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#constructor",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "config",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#config",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"data\": *, \"params\": *}"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "status",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#status",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "url",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#url",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "method",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#method",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "responseHandler",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#responseHandler",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      },
      {
        "name": "onSuccess",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "response",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#response",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "setMethod",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#setMethod",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "method",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "method",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#method",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "setUrl",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#setUrl",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "url",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#url",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "post",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#post",
    "access": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "del",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#del",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "put",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#put",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "get",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#get",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "users",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#users",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "auth",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#auth",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "events",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#events",
    "access": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "reports",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#reports",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "all",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#all",
    "access": null,
    "description": "Helper method to add `/all` to endpoint.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "member",
    "name": "endpoint",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#endpoint",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "data",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#data",
    "access": null,
    "description": "Sets the body of the request object",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Connection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "params",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#params",
    "access": null,
    "description": "Sets the query parameters of the request object",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Connection}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "call",
    "memberof": "cpceed-webapp/src/server/core/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "cpceed-webapp/src/server/core/connection.js~Connection#call",
    "access": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "onSuccess",
        "types": [
          "*"
        ]
      },
      {
        "name": "onError",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "cpceed-webapp/src/server/events.js",
    "content": "// import logger from 'logger.js';\nimport Connection from 'server/core/connection';\n\n\n/**\n * Creates a new event on the server\n *\n * @example\n * const newEvent = {\n *  creator: '<User UID>',\n *  title: 'Studying',\n *  description: 'Studying for finals',\n *  datetime: new Date(),\n *  location: 'Library',\n *  category: 'misc',\n * };\n *\n * createEvent(newEvent).then((result) => {\n *   logger.info(`Created new event with uid: ${result.uid}`);\n * }).catch((err) => {\n *   logger.error(err);\n * });\n *\n * @param {EventSchema} newEvent - The data for the new event\n * @returns {Promise<string, Error} - Resolves with UID of created event\n *                                    rejects with the error\n */\nexport function createEvent(newEvent) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .post()\n      .events()\n      .data(newEvent)\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Modifies an event on the server.\n * Must be the creator of the event or admin to modify.\n *\n * @example\n * const updatedEvent.description = 'Giving up on finals';\n *\n * modifyEvent(updatedEvent).then((result) => {\n *   logger.info(`Event with uid ${result.uid} was updated`);\n * }).catch((err) => {\n *   logger.error(err);\n * });\n *\n * @param {string} uid - UID of event to be modified\n * @param {EventSchema} updatedEvent - Event data to be updated\n * @returns {Promise<EventSchema, Error>} - Resolves with the updated event data\n */\nexport function modifyEvent(uid, updatedEvent) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .put()\n      .events()\n      .data(updatedEvent)\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Removes an event on the server.\n * Must be the creator of the event or admin to remove\n *\n * @example\n * removeEvent(someEvent.uid).then(() => {\n *  logger.info(`Event with UID ${someEvent.uid} removed`);\n * }).catch((err) => {\n *  logger.error(err);\n * });\n *\n * @param {string} uid - UID of the event to remove\n * @returns {Promise<,Error>} - Resolves with nothing if successful\n */\nexport function removeEvent(uid) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .del()\n      .events()\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Retrieves an event from the server by its UID\n *\n * @example\n * getEvent('12345').then((event) => {\n *  logger.info(`Retrieved event with uid: ${event.uid}`); // == 12345\n * }).catch((err) => {\n *  logger.error(err);\n * });\n *\n * @param {string} uid - UID of the event to be retrieved\n * @returns {Promise<EventSchema, Error} - Resolves with event info\n */\nexport function getEvent(uid) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .get()\n      .events()\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Retrieves all events from the server.\n * In future, this will accept search and filter parameters.\n *\n * @example\n * getAllEvents().then((events) => {\n *  Object.keys(events).forEach((eventUid) => {\n *    logger.info(`Retrieved event with UID: ${eventUid} and data: ${events[eventUid]}`);\n *  });\n * }).catch((err) => {\n *  logger.error(err);\n * });\n *\n * @returns {Promise<Object, Error} - Resolves with an\n *           object of key value pairs where the key is the Event UID and the\n *           is the Event Data.\n */\nexport function getAllEvents() {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .get()\n      .all()\n      .events()\n      .call(resolve, reject);\n  });\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/events.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "createEvent",
    "memberof": "cpceed-webapp/src/server/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/events.js~createEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/events.js",
    "importStyle": "{createEvent}",
    "description": "Creates a new event on the server",
    "examples": [
      "const newEvent = {\n creator: '<User UID>',\n title: 'Studying',\n description: 'Studying for finals',\n datetime: new Date(),\n location: 'Library',\n category: 'misc',\n};\n\ncreateEvent(newEvent).then((result) => {\n  logger.info(`Created new event with uid: ${result.uid}`);\n}).catch((err) => {\n  logger.error(err);\n});"
    ],
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<string, Error} - Resolves with UID of created event\n                                   rejects with the error"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "EventSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "newEvent",
        "description": "The data for the new event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error"
      ],
      "spread": false,
      "description": "Resolves with UID of created event\n                                   rejects with the error"
    }
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "modifyEvent",
    "memberof": "cpceed-webapp/src/server/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/events.js~modifyEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/events.js",
    "importStyle": "{modifyEvent}",
    "description": "Modifies an event on the server.\nMust be the creator of the event or admin to modify.",
    "examples": [
      "const updatedEvent.description = 'Giving up on finals';\n\nmodifyEvent(updatedEvent).then((result) => {\n  logger.info(`Event with uid ${result.uid} was updated`);\n}).catch((err) => {\n  logger.error(err);\n});"
    ],
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<EventSchema, Error>} - Resolves with the updated event data"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "UID of event to be modified"
      },
      {
        "nullable": null,
        "types": [
          "EventSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "updatedEvent",
        "description": "Event data to be updated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EventSchema, Error>"
      ],
      "spread": false,
      "description": "Resolves with the updated event data"
    }
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "removeEvent",
    "memberof": "cpceed-webapp/src/server/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/events.js~removeEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/events.js",
    "importStyle": "{removeEvent}",
    "description": "Removes an event on the server.\nMust be the creator of the event or admin to remove",
    "examples": [
      "removeEvent(someEvent.uid).then(() => {\n logger.info(`Event with UID ${someEvent.uid} removed`);\n}).catch((err) => {\n logger.error(err);\n});"
    ],
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<,Error>} - Resolves with nothing if successful"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "UID of the event to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<,Error>"
      ],
      "spread": false,
      "description": "Resolves with nothing if successful"
    }
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "getEvent",
    "memberof": "cpceed-webapp/src/server/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/events.js~getEvent",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/events.js",
    "importStyle": "{getEvent}",
    "description": "Retrieves an event from the server by its UID",
    "examples": [
      "getEvent('12345').then((event) => {\n logger.info(`Retrieved event with uid: ${event.uid}`); // == 12345\n}).catch((err) => {\n logger.error(err);\n});"
    ],
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<EventSchema, Error} - Resolves with event info"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "UID of the event to be retrieved"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<EventSchema, Error"
      ],
      "spread": false,
      "description": "Resolves with event info"
    }
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "getAllEvents",
    "memberof": "cpceed-webapp/src/server/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/events.js~getAllEvents",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/events.js",
    "importStyle": "{getAllEvents}",
    "description": "Retrieves all events from the server.\nIn future, this will accept search and filter parameters.",
    "examples": [
      "getAllEvents().then((events) => {\n Object.keys(events).forEach((eventUid) => {\n   logger.info(`Retrieved event with UID: ${eventUid} and data: ${events[eventUid]}`);\n });\n}).catch((err) => {\n logger.error(err);\n});"
    ],
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object, Error} - Resolves with an\n          object of key value pairs where the key is the Event UID and the\n          is the Event Data."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error"
      ],
      "spread": false,
      "description": "Resolves with an\n          object of key value pairs where the key is the Event UID and the\n          is the Event Data."
    }
  },
  {
    "__docId__": 351,
    "kind": "file",
    "name": "cpceed-webapp/src/server/index.js",
    "content": "export * from './events.js';\nexport * from './reports.js';\nexport * from './user-auth.js';\nexport * from './user.js';\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 352,
    "kind": "file",
    "name": "cpceed-webapp/src/server/reports.js",
    "content": "// import logger from 'logger.js';\nimport Connection from 'server/core/connection';\n\n\n/**\n * Creates a new report on the server\n *\n * @example\n * const newOtherReport = {\n *  creator: '<User UID>',\n *  title: 'Studying',\n *  description: 'Studying for finals',\n *  datetime: new Date(),\n *  location: 'Library',\n *  category: 'misc',\n * };\n *\n * createReport(newOtherReport).then((result) => {\n *   logger.info(`Created new report with uid: ${result.uid}`);\n * }).catch((err) => {\n *   logger.error(err);\n * });\n *\n * @param {Object} newReport - The data for the new report\n * @returns {Promise<string, Error} - Resolves with UID of created report\n *                                    rejects with the error\n */\nexport function createReport(newReport) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .post()\n      .reports()\n      .data(newReport)\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Modifies an report on the server.\n * Must be the creator of the report or admin to modify.\n *\n * @example\n * const updatedReport.description = 'Giving up on finals';\n *\n * modifyReport(updatedReport).then((result) => {\n *   logger.info(`Report with uid ${result.uid} was updated`);\n * }).catch((err) => {\n *   logger.error(err);\n * });\n *\n * @param {string} uid - UID of report to be modified\n * @param {Object} updatedReport - Report data to be updated\n * @returns {Promise<Object, Error>} - Resolves with the updated report data\n */\nexport function modifyReport(uid, updatedReport) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .put()\n      .reports()\n      .data(updatedReport)\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Removes an report on the server.\n * Must be the creator of the report or admin to remove\n *\n * @example\n * removeReport(someReport.uid).then(() => {\n *  logger.info(`Report with UID ${someReport.uid} removed`);\n * }).catch((err) => {\n *  logger.error(err);\n * });\n *\n * @param {string} uid - UID of the report to remove\n * @returns {Promise<,Error>} - Resolves with nothing if successful\n */\nexport function removeReport(uid) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .del()\n      .reports()\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Retrieves an report from the server by its UID\n *\n * @example\n * getReport('12345').then((report) => {\n *  logger.info(`Retrieved report with uid: ${report.uid}`); // == 12345\n * }).catch((err) => {\n *  logger.error(err);\n * });\n *\n * @param {string} uid - UID of the report to be retrieved\n * @returns {Promise<Object, Error} - Resolves with report info\n */\nexport function getReport(uid) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .get()\n      .reports()\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Retrieves all reports from the server.\n * In future, this will accept search and filter parameters.\n *\n * @example\n * getAllReports().then((reports) => {\n *  Object.keys(reports).forEach((reportUid) => {\n *    logger.info(`Retrieved report with UID: ${reportUid} and data: ${reports[reportUid]}`);\n *  });\n * }).catch((err) => {\n *  logger.error(err);\n * });\n *\n * @returns {Promise<Object, Error} - Resolves with an\n *           object of key value pairs where the key is the Report UID and the\n *           is the Report Data.\n */\nexport function getAllReports() {\n  return new Promise((resolve, reject) => {\n    new Connection()\n      .get()\n      .all()\n      .reports()\n      .call(resolve, reject);\n  });\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/reports.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "createReport",
    "memberof": "cpceed-webapp/src/server/reports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/reports.js~createReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/reports.js",
    "importStyle": "{createReport}",
    "description": "Creates a new report on the server",
    "examples": [
      "const newOtherReport = {\n creator: '<User UID>',\n title: 'Studying',\n description: 'Studying for finals',\n datetime: new Date(),\n location: 'Library',\n category: 'misc',\n};\n\ncreateReport(newOtherReport).then((result) => {\n  logger.info(`Created new report with uid: ${result.uid}`);\n}).catch((err) => {\n  logger.error(err);\n});"
    ],
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<string, Error} - Resolves with UID of created report\n                                   rejects with the error"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newReport",
        "description": "The data for the new report"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error"
      ],
      "spread": false,
      "description": "Resolves with UID of created report\n                                   rejects with the error"
    }
  },
  {
    "__docId__": 354,
    "kind": "function",
    "name": "modifyReport",
    "memberof": "cpceed-webapp/src/server/reports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/reports.js~modifyReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/reports.js",
    "importStyle": "{modifyReport}",
    "description": "Modifies an report on the server.\nMust be the creator of the report or admin to modify.",
    "examples": [
      "const updatedReport.description = 'Giving up on finals';\n\nmodifyReport(updatedReport).then((result) => {\n  logger.info(`Report with uid ${result.uid} was updated`);\n}).catch((err) => {\n  logger.error(err);\n});"
    ],
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object, Error>} - Resolves with the updated report data"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "UID of report to be modified"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "updatedReport",
        "description": "Report data to be updated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error>"
      ],
      "spread": false,
      "description": "Resolves with the updated report data"
    }
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "removeReport",
    "memberof": "cpceed-webapp/src/server/reports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/reports.js~removeReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/reports.js",
    "importStyle": "{removeReport}",
    "description": "Removes an report on the server.\nMust be the creator of the report or admin to remove",
    "examples": [
      "removeReport(someReport.uid).then(() => {\n logger.info(`Report with UID ${someReport.uid} removed`);\n}).catch((err) => {\n logger.error(err);\n});"
    ],
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<,Error>} - Resolves with nothing if successful"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "UID of the report to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<,Error>"
      ],
      "spread": false,
      "description": "Resolves with nothing if successful"
    }
  },
  {
    "__docId__": 356,
    "kind": "function",
    "name": "getReport",
    "memberof": "cpceed-webapp/src/server/reports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/reports.js~getReport",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/reports.js",
    "importStyle": "{getReport}",
    "description": "Retrieves an report from the server by its UID",
    "examples": [
      "getReport('12345').then((report) => {\n logger.info(`Retrieved report with uid: ${report.uid}`); // == 12345\n}).catch((err) => {\n logger.error(err);\n});"
    ],
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object, Error} - Resolves with report info"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uid",
        "description": "UID of the report to be retrieved"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error"
      ],
      "spread": false,
      "description": "Resolves with report info"
    }
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "getAllReports",
    "memberof": "cpceed-webapp/src/server/reports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/reports.js~getAllReports",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/reports.js",
    "importStyle": "{getAllReports}",
    "description": "Retrieves all reports from the server.\nIn future, this will accept search and filter parameters.",
    "examples": [
      "getAllReports().then((reports) => {\n Object.keys(reports).forEach((reportUid) => {\n   logger.info(`Retrieved report with UID: ${reportUid} and data: ${reports[reportUid]}`);\n });\n}).catch((err) => {\n logger.error(err);\n});"
    ],
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<Object, Error} - Resolves with an\n          object of key value pairs where the key is the Report UID and the\n          is the Report Data."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error"
      ],
      "spread": false,
      "description": "Resolves with an\n          object of key value pairs where the key is the Report UID and the\n          is the Report Data."
    }
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "cpceed-webapp/src/server/user-auth.js",
    "content": "import store from 'redux/store.js';\nimport { updateUser, logoutUser } from 'redux/actions';\nimport Connection from 'server/core/connection';\n\n/**\n * Attempt to login using email and password.\n * @param {String} email - The email address.\n * @param {String} password - The password.\n * @return {Promise<Object, Error>} - Promise that resolves with the user's\n *                                    data or rejects with an error.\n */\nexport function login(email, password) {\n  return new Promise((resolve, reject) => {\n    const onSuccess = (res) => {\n      store.dispatch(updateUser(res.user));\n      resolve(res.user);\n    };\n\n    new Connection()\n      .post()\n      .auth()\n      .data({ email, password })\n      .call(onSuccess, reject);\n  });\n}\n\n/**\n * Attempt to logout.\n * @return {Promise<undefined, Error>} - Promise that resolves as undefined or\n *                                       rejects with an error.\n */\nexport function logout() {\n  return new Promise((resolve, reject) => {\n    const onSuccess = () => {\n      store.dispatch(logoutUser());\n      resolve();\n    };\n\n    new Connection()\n      .del()\n      .auth()\n      .call(onSuccess, reject);\n  });\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/user-auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "login",
    "memberof": "cpceed-webapp/src/server/user-auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/user-auth.js~login",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/user-auth.js",
    "importStyle": "{login}",
    "description": "Attempt to login using email and password.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "The email address."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "The password."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error>"
      ],
      "spread": false,
      "description": "Promise that resolves with the user's\n                                   data or rejects with an error."
    }
  },
  {
    "__docId__": 360,
    "kind": "function",
    "name": "logout",
    "memberof": "cpceed-webapp/src/server/user-auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/user-auth.js~logout",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/user-auth.js",
    "importStyle": "{logout}",
    "description": "Attempt to logout.",
    "lineNumber": 32,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Promise that resolves as undefined or\n                                      rejects with an error."
    }
  },
  {
    "__docId__": 361,
    "kind": "file",
    "name": "cpceed-webapp/src/server/user.js",
    "content": "import Connection from 'server/core/connection';\n\n/**\n * Creates a new user on the server\n *\n * @param {UserSchema} newUser - The data for the new user\n * @return {Promise<string, Error>} - Promise that resolves with the UID or\n *                                    rejects with the error\n */\nexport function createUser(newUser) {\n  return new Promise((resolve, reject) => {\n    new Connection()\n        .post()\n        .users()\n        .data(newUser)\n        .call(resolve, reject);\n  });\n}\n\n/**\n * Deletes a user from the server\n *\n * @param {string} [userUid] - UID of user to be removed, defaults to current\n *                             user's uid\n * @return {Promise<Error>} - Resolves on null, rejects with error\n */\nexport function deleteUser(userUid) {\n  return new Promise((resolve, reject) => {\n    const uid = userUid;\n    new Connection()\n      .del()\n      .users()\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Modifies a user on the server\n *\n * @param {Object} data - Data on the user to be updated\n * @param {string} [userUid] - UID of user to be updated, defaults to current\n *                             user's uid\n * @return {Promise<UserSchema, Error>} - Promise that resolves with the\n *                                        modified user or rejects with error\n */\nexport function modifyUser(data, userUid) {\n  return new Promise((resolve, reject) => {\n    const uid = userUid;\n    new Connection()\n      .put()\n      .users()\n      .data(data)\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n\n/**\n * Retrieves a user from the server\n *\n * @param {string} [userUid] - UID of user to be updated, defaults to current\n *                             user's uid\n * @return {Promise<userSchema, Error>} - Promise that resolves with the user\n *                                        or rejects with error\n */\nexport function getUser(userUid) {\n  return new Promise((resolve, reject) => {\n    const uid = userUid;\n    new Connection()\n      .get()\n      .users()\n      .params({ uid })\n      .call(resolve, reject);\n  });\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/user.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "createUser",
    "memberof": "cpceed-webapp/src/server/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/user.js~createUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/user.js",
    "importStyle": "{createUser}",
    "description": "Creates a new user on the server",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UserSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "newUser",
        "description": "The data for the new user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Promise that resolves with the UID or\n                                   rejects with the error"
    }
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "deleteUser",
    "memberof": "cpceed-webapp/src/server/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/user.js~deleteUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/user.js",
    "importStyle": "{deleteUser}",
    "description": "Deletes a user from the server",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "userUid",
        "description": "UID of user to be removed, defaults to current\n                            user's uid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Error>"
      ],
      "spread": false,
      "description": "Resolves on null, rejects with error"
    }
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "modifyUser",
    "memberof": "cpceed-webapp/src/server/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/user.js~modifyUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/user.js",
    "importStyle": "{modifyUser}",
    "description": "Modifies a user on the server",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data on the user to be updated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "userUid",
        "description": "UID of user to be updated, defaults to current\n                            user's uid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<UserSchema, Error>"
      ],
      "spread": false,
      "description": "Promise that resolves with the\n                                       modified user or rejects with error"
    }
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "getUser",
    "memberof": "cpceed-webapp/src/server/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/user.js~getUser",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/user.js",
    "importStyle": "{getUser}",
    "description": "Retrieves a user from the server",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "userUid",
        "description": "UID of user to be updated, defaults to current\n                            user's uid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<userSchema, Error>"
      ],
      "spread": false,
      "description": "Promise that resolves with the user\n                                       or rejects with error"
    }
  },
  {
    "__docId__": 366,
    "kind": "file",
    "name": "cpceed-webapp/src/server/utils.js",
    "content": "export function getRandomString() {\n  return Math.random().toString(36).substring(7);\n}\n",
    "static": true,
    "longname": "cpceed-webapp/src/server/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "function",
    "name": "getRandomString",
    "memberof": "cpceed-webapp/src/server/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "cpceed-webapp/src/server/utils.js~getRandomString",
    "access": null,
    "export": true,
    "importPath": "cpceed-web-app/cpceed-webapp/src/server/utils.js",
    "importStyle": "{getRandomString}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 370,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 371,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 372,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 373,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 374,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 375,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 376,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 377,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 378,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 379,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 380,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 381,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 382,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 383,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 384,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 385,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 386,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 387,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 388,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 389,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 390,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 391,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 392,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 393,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 394,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 395,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 396,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 397,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 398,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 399,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 400,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 401,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 402,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 403,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 404,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 405,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 406,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 407,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 408,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 409,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 410,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 411,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 412,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 413,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 414,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 415,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 417,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 418,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 419,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 420,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 421,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 422,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 423,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 424,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]